{
	"info": {
		"_postman_id": "d1ad7c77-a8cd-4b61-a17d-27e03bcecb26",
		"name": "Virtuoso API Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25171171"
	},
	"item": [
		{
			"name": "Create Structure",
			"item": [
				{
					"name": "1. Create Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test successful response",
									"pm.test(\"Status code is 201\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);",
									"});",
									"",
									"// Test response structure and save project ID",
									"pm.test(\"Project created successfully\", () => {",
									"    const responseBody = pm.response.json();",
									"    ",
									"    // Validate response structure",
									"    pm.expect(responseBody).to.be.an('object');",
									"    pm.expect(responseBody.success).to.be.true;",
									"    pm.expect(responseBody).to.have.property('item');",
									"    pm.expect(responseBody.item).to.be.an('object');",
									"    ",
									"    // Validate and save project ID",
									"    pm.expect(responseBody.item).to.have.property('id');",
									"    pm.expect(responseBody.item.id).to.be.a('number').and.to.be.above(0);",
									"    ",
									"    // Store project ID for subsequent requests",
									"    const projectId = responseBody.item.id;",
									"    pm.collectionVariables.set('projectId', projectId);",
									"    console.log(`Created project with ID: ${projectId}`);",
									"});",
									"",
									"// Optional: Response time check",
									"pm.test(\"Response time is acceptable\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Virtuoso-Client-ID",
								"value": "{{X-Virtuoso-Client-ID}}"
							},
							{
								"key": "X-Virtuoso-Client-Name",
								"value": "{{X-Virtuoso-Client-Name}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{projectName}}_{{$randomUUID}}\", // Name of project\n    \"organizationId\": {{organizationId}} // Organization ID where project is created\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/projects",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Create New Goal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test successful response",
									"pm.test(\"Status code is 201\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);",
									"});",
									"",
									"// Test response structure and save goal ID",
									"pm.test(\"Goal created successfully\", () => {",
									"    const responseBody = pm.response.json();",
									"    ",
									"    // Validate response structure",
									"    pm.expect(responseBody).to.be.an('object');",
									"    pm.expect(responseBody.success).to.be.true;",
									"    pm.expect(responseBody).to.have.property('item');",
									"    pm.expect(responseBody.item).to.be.an('object');",
									"    ",
									"    // Validate and save goal ID",
									"    pm.expect(responseBody.item).to.have.property('id');",
									"    pm.expect(responseBody.item.id).to.be.a('number').and.to.be.above(0);",
									"    ",
									"    // Store goal ID for subsequent requests",
									"    const goalId = responseBody.item.id;",
									"    pm.collectionVariables.set('goalId', goalId);",
									"    console.log(`Created goal with ID: ${goalId}`);",
									"});",
									"",
									"// Optional: Response time check",
									"pm.test(\"Response time is acceptable\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Virtuoso-Client-ID",
								"value": "{{X-Virtuoso-Client-ID}}"
							},
							{
								"key": "X-Virtuoso-Client-Name",
								"value": "{{X-Virtuoso-Client-Name}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}}, // ID of project where goal is created\n  \"name\": \"Goal_{{$randomUUID}}\", // Name of goal, with random UUID to prevent duplicate names\n  \"environmentId\": null,\n  \"url\": \"https://www.example.com\",\n  \"deviceSize\": {\n    \"width\": 1280,\n    \"height\": 800\n  },\n  \"meta\": {\n    \"onlyManagersCanPublishJourneys\": null,\n    \"disableSameOrigin\": false,\n    \"disableEventLogs\": false,\n    \"bridgeClientUuid\": null,\n    \"defaultMaxParallelism\": null,\n    \"maxParallelism\": null,\n    \"legacyElementSelection\": null,\n    \"clientSideLibraryShimsEnabled\": false,\n    \"popupAutoDismiss\": true,\n    \"waitForNetworkTraffic\": null,\n    \"failScriptOnNavigate\": null\n  },\n  \"createFirstJourney\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/goals",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"goals"
							]
						},
						"description": "Creates a new goal within the specified project.\n\n**Required Parameters:**\n- `projectId`: The ID of the project\n- `name`: Name of the goal\n- `url`: The URL to test\n\n**Optional Parameters:**\n- `deviceSize`: The viewport size for testing\n- `meta`: Additional settings\n- `createFirstJourney`: Whether to create an initial journey/journey\n\n**Response:**\nReturns the created goal object with an ID and potential journey information."
					},
					"response": []
				},
				{
					"name": "3. Get SnapshotId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test successful response",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"// Test response structure and save snapshot ID",
									"pm.test(\"Snapshot created successfully\", () => {",
									"    const responseBody = pm.response.json();",
									"    ",
									"    // Validate response structure",
									"    pm.expect(responseBody).to.be.an('object');",
									"    pm.expect(responseBody.success).to.be.true;",
									"    pm.expect(responseBody).to.have.property('item');",
									"    pm.expect(responseBody.item).to.be.an('object');",
									"    ",
									"    // Validate snapshots array",
									"    pm.expect(responseBody.item).to.have.property('snapshots');",
									"    pm.expect(responseBody.item.snapshots).to.be.an('array').that.is.not.empty;",
									"    ",
									"    // Get latest snapshot (first in array)",
									"    const latestSnapshot = responseBody.item.snapshots[0];",
									"    pm.expect(latestSnapshot).to.have.property('snapshotId');",
									"    pm.expect(latestSnapshot.snapshotId).to.be.a('number').and.to.be.above(0);",
									"    ",
									"    // Store snapshot ID for subsequent requests",
									"    const snapshotId = latestSnapshot.snapshotId;",
									"    pm.collectionVariables.set('snapshotId', snapshotId);",
									"    console.log(`Created snapshot with ID: ${snapshotId}`);",
									"});",
									"",
									"// Optional: Response time check",
									"pm.test(\"Response time is acceptable\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Virtuoso-Client-ID",
								"value": "{{X-Virtuoso-Client-ID}}"
							},
							{
								"key": "X-Virtuoso-Client-Name",
								"value": "{{X-Virtuoso-Client-Name}}"
							}
						],
						"url": {
							"raw": "{{baseURL}}/goals/{{goalId}}/versions",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"goals",
								"{{goalId}}",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Get Journeys",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test successful response",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"// Test response structure and save journey ID",
									"pm.test(\"Journey created successfully\", () => {",
									"    const responseBody = pm.response.json();",
									"    ",
									"    // Validate response structure",
									"    pm.expect(responseBody).to.be.an('object');",
									"    pm.expect(responseBody.success).to.be.true;",
									"    pm.expect(responseBody).to.have.property('map');",
									"    pm.expect(responseBody.map).to.be.an('object');",
									"    pm.expect(Object.keys(responseBody.map)).to.have.length.above(0);",
									"    ",
									"    // Get first journey ID",
									"    const journeyId = Object.keys(responseBody.map)[0];",
									"    pm.expect(journeyId).to.be.a('string');",
									"    ",
									"    // Validate journey data exists",
									"    pm.expect(responseBody.map[journeyId]).to.have.property('journey');",
									"    pm.expect(responseBody.map[journeyId].journey).to.have.property('id');",
									"    pm.expect(responseBody.map[journeyId].journey.id.toString()).to.equal(journeyId);",
									"    ",
									"    // Store journey ID for subsequent requests",
									"    pm.collectionVariables.set('journeyId', journeyId);",
									"    console.log(`Created journey with ID: ${journeyId}`);",
									"});",
									"",
									"// Optional: Response time check",
									"pm.test(\"Response time is acceptable\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Virtuoso-Client-ID",
								"value": "{{X-Virtuoso-Client-ID}}"
							},
							{
								"key": "X-Virtuoso-Client-Name",
								"value": "{{X-Virtuoso-Client-Name}}"
							}
						],
						"url": {
							"raw": "{{baseURL}}/testsuites/latest_status?versionId={{snapshotId}}&goalId={{goalId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"testsuites",
								"latest_status"
							],
							"query": [
								{
									"key": "versionId",
									"value": "{{snapshotId}}"
								},
								{
									"key": "goalId",
									"value": "{{goalId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Create Journey",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-GB,en;q=0.5",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br, zstd",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "X-V-SESSION-ID",
								"value": "5UlFmOA7PcRAdzw0FxcjtuTv7q1v5ooLYE1k_V0p",
								"disabled": true
							},
							{
								"key": "X-Virtuoso-Client-Name",
								"value": "Virtuoso UI",
								"disabled": true
							},
							{
								"key": "X-Virtuoso-Client-ID",
								"value": "1751629591287_0fa75d6_production",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Bearer 1e1232a5-07f0-45f8-8e5e-8a64b761322f"
							},
							{
								"key": "sentry-trace",
								"value": "06a9d544f2cd4e54996d64596bbd2ae6-b4bb91dab36acad3-0",
								"disabled": true
							},
							{
								"key": "baggage",
								"value": "sentry-environment=freetrial,sentry-release=0fa75d6d01dccc93a286203f3f3aef9376e15ae9,sentry-public_key=2178b2d23df743469699881a1756168a,sentry-trace_id=06a9d544f2cd4e54996d64596bbd2ae6,sentry-transaction=goal-view,sentry-sampled=false,sentry-sample_rand=0.3720091138516842,sentry-sample_rate=0.1",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "https://app2.virtuoso.qa",
								"disabled": true
							},
							{
								"key": "DNT",
								"value": "1",
								"disabled": true
							},
							{
								"key": "Connection",
								"value": "keep-alive",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "https://app2.virtuoso.qa/",
								"disabled": true
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty",
								"disabled": true
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors",
								"disabled": true
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-site",
								"disabled": true
							},
							{
								"key": "Priority",
								"value": "u=0",
								"disabled": true
							},
							{
								"key": "TE",
								"value": "trailers",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"snapshotId\": {{snapshotId}},\n    \"goalId\": {{goalId}},\n    \"name\": \"{{journeyName}}_{{$randomUUID}}\",\n    \"title\": \"{{journeyName}}_{{$randomUUID}}\",\n    \"archived\": false,\n    \"draft\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api-app2.virtuoso.qa/api/testsuites?envelope=false",
							"protocol": "https",
							"host": [
								"api-app2",
								"virtuoso",
								"qa"
							],
							"path": [
								"api",
								"testsuites"
							],
							"query": [
								{
									"key": "envelope",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Create Checkpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test successful response",
									"pm.test(\"Status code is 201\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);",
									"});",
									"",
									"// Test response structure and save checkpoint ID",
									"pm.test(\"Checkpoint created successfully\", () => {",
									"    const responseBody = pm.response.json();",
									"    ",
									"    // Validate response structure",
									"    pm.expect(responseBody).to.be.an('object');",
									"    pm.expect(responseBody.success).to.be.true;",
									"    pm.expect(responseBody).to.have.property('item');",
									"    pm.expect(responseBody.item).to.be.an('object');",
									"    ",
									"    // Validate and save checkpoint ID",
									"    pm.expect(responseBody.item).to.have.property('id');",
									"    pm.expect(responseBody.item.id).to.be.a('number').and.to.be.above(0);",
									"    ",
									"    // Store checkpoint ID for subsequent requests",
									"    const checkpointId = responseBody.item.id;",
									"    pm.collectionVariables.set('checkpointId', checkpointId);",
									"    console.log(`Created checkpoint with ID: ${checkpointId}`);",
									"});",
									"",
									"// Optional: Response time check",
									"pm.test(\"Response time is acceptable\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Virtuoso-Client-ID",
								"value": "{{X-Virtuoso-Client-ID}}"
							},
							{
								"key": "X-Virtuoso-Client-Name",
								"value": "{{X-Virtuoso-Client-Name}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"snapshotId\": {{snapshotId}}, // Snapshot (version) ID of the parent goal retrieved from the api/goals/[goalId]/versions endpoint\n  \"goalId\": {{goalId}}, // ID of the parent goal\n  \"title\": \"Checkpoint_{{$randomUUID}}\" // Name of the checkpoint with a random UUID to prevent duplicate names\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/testcases",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"testcases"
							]
						},
						"description": "Creates a new checkpoint (testcase) within a goal.\n\n**Required Parameters:**\n- `versionId`: The version ID from goal versions (CRITICAL - must be valid)\n- `goalId`: The ID of the goal\n- `title`: Title/name of the checkpoint (must be unique per goal)\n\n**Response:**\nReturns the created checkpoint object with an ID.\n\n**CRITICAL PREREQUISITES:**\n1. A valid `version_id` is required from the Get Goal Versions endpoint\n2. If this request fails, check if you have a valid version ID from the previous step\n\n**IMPORTANT NEXT STEP:** \nCreating a checkpoint alone is not sufficient. For the checkpoint to be valid and usable, it must be attached to a journey (journey) using the Attach Checkpoint to Journey endpoint. The checkpoint must be attached with position 2 or greater."
					},
					"response": []
				},
				{
					"name": "7. Attach Checkpoint to Journey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validate journey ID before testing",
									"const journeyId = pm.collectionVariables.get('journeyId');",
									"",
									"if (!journeyId || !/^\\d+$/.test(journeyId)) {",
									"    pm.test.skip(\"Invalid journey ID - skipping checkpoint attachment\", () => {",
									"        console.log(`Invalid journey ID: ${journeyId || '[empty]'}`);",
									"        console.log(`Run 'Get Journeys' request first to get a valid journey ID`);",
									"    });",
									"} else {",
									"    // Test successful response",
									"    pm.test(\"Status code is 200\", () => {",
									"        pm.expect(pm.response.code).to.equal(200);",
									"    });",
									"",
									"    // Test checkpoint was attached successfully",
									"    pm.test(\"Checkpoint attached to journey\", () => {",
									"        const responseBody = pm.response.json();",
									"        ",
									"        // Validate response structure",
									"        pm.expect(responseBody).to.be.an('object');",
									"        pm.expect(responseBody.success).to.be.true;",
									"        pm.expect(responseBody).to.have.property('item');",
									"        pm.expect(responseBody.item).to.be.an('object');",
									"        ",
									"        // Validate journey ID matches",
									"        pm.expect(responseBody.item.id.toString()).to.equal(journeyId);",
									"        ",
									"        // Validate cases array exists (checkpoints)",
									"        pm.expect(responseBody.item).to.have.property('cases');",
									"        pm.expect(responseBody.item.cases).to.be.an('array').with.length.above(0);",
									"        ",
									"        console.log(`Successfully attached checkpoint to journey ${journeyId}`);",
									"    });",
									"",
									"    // Optional: Response time check",
									"    pm.test(\"Response time is acceptable\", () => {",
									"        pm.expect(pm.response.responseTime).to.be.below(2000);",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Skip the request if using an invalid journey ID",
									"const journeyId = pm.collectionVariables.get('journey_id');",
									"if (!journeyId || journeyId === '' || (journeyId && (journeyId.includes('placeholder') || journeyId.includes('goal-')))) {",
									"    console.log(`⚠️ Invalid journey_id: ${journeyId || '[empty]'} - skipping request`);",
									"    console.log(`⚠️ Run the 'Get Goal Journeys' request first to get a valid journey ID.`);",
									"    postman.setNextRequest();",
									"} else if (!/^\\d+$/.test(journeyId)) {",
									"    console.log(`⚠️ journey_id is not a numeric journey ID: ${journeyId} - skipping request`);",
									"    console.log(`⚠️ Run the 'Get Goal Journeys' request to get a valid journey ID.`);",
									"    postman.setNextRequest();",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Virtuoso-Client-ID",
								"value": "{{X-Virtuoso-Client-ID}}",
								"type": "text"
							},
							{
								"key": "X-Virtuoso-Client-Name",
								"value": "{{X-Virtuoso-Client-Name}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"checkpointId\": {{checkpointId}}, // ID of the checkpoint to be attached\n  \"position\": {{checkpointPosition}} // Sequence position in the journey, defined the run order with the lowest number in the sequence being run first\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/testsuites/{{journeyId}}/checkpoints/attach",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"testsuites",
								"{{journeyId}}",
								"checkpoints",
								"attach"
							]
						},
						"description": "Attaches a checkpoint to a journey at the specified position. This step is CRITICAL for making the checkpoint valid and usable.\n\n**Required Parameters:**\n- `journey_id`: The NUMERIC journey ID (e.g., 596174) - must be a valid journey ID, not a placeholder\n- `checkpointId`: The ID of the checkpoint to attach\n- `position`: Position in the journey sequence (must be 2 or greater)\n\n**Response:**\nReturns updated journey checkpoint list.\n\n**CRITICAL NOTES:**\n- The `journey_id` MUST be a valid journey ID, which can be obtained from the \"Get Goal Journeys\" endpoint\n- The journey ID typically looks like a numeric value (e.g., 596174) \n- The position MUST be 2 or greater for the checkpoint to be valid\n- A checkpoint cannot be used to add test steps until it has been attached to a journey\n- This is a required step in the workflow after creating a checkpoint\n- This request will be skipped if using a placeholder journey ID"
					},
					"response": []
				},
				{
					"name": "8. Create Step",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test successful response",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"// Test response structure and save step ID",
									"pm.test(\"Test step created successfully\", () => {",
									"    const responseBody = pm.response.json();",
									"    ",
									"    // Validate response structure",
									"    pm.expect(responseBody).to.be.an('object');",
									"    pm.expect(responseBody.success).to.be.true;",
									"    pm.expect(responseBody).to.have.property('item');",
									"    pm.expect(responseBody.item).to.be.an('object');",
									"    ",
									"    // Validate test step",
									"    pm.expect(responseBody.item).to.have.property('testStep');",
									"    pm.expect(responseBody.item.testStep).to.have.property('id');",
									"    pm.expect(responseBody.item.testStep.id).to.be.a('number').and.to.be.above(0);",
									"    ",
									"    // Store step ID for subsequent requests",
									"    const stepId = responseBody.item.testStep.id;",
									"    pm.collectionVariables.set('stepId', stepId);",
									"    console.log(`Created test step with ID: ${stepId}`);",
									"});",
									"",
									"// Validate step exists in checkpoint",
									"pm.test(\"Step added to checkpoint\", () => {",
									"    const responseBody = pm.response.json();",
									"    const stepId = responseBody.item.testStep.id;",
									"    ",
									"    // Validate checkpoint structure",
									"    pm.expect(responseBody.item).to.have.property('checkpoint');",
									"    pm.expect(responseBody.item.checkpoint).to.have.property('steps');",
									"    pm.expect(responseBody.item.checkpoint.steps).to.be.an('array').that.is.not.empty;",
									"    ",
									"    // Verify step exists in checkpoint",
									"    const stepExists = responseBody.item.checkpoint.steps.some(step => step.id === stepId);",
									"    pm.expect(stepExists).to.be.true;",
									"});",
									"",
									"// Optional: Response time check",
									"pm.test(\"Response time is acceptable\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Virtuoso-Client-ID",
								"value": "{{X-Virtuoso-Client-ID}}",
								"type": "text"
							},
							{
								"key": "X-Virtuoso-Client-Name",
								"value": "{{X-Virtuoso-Client-Name}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"checkpointId\": {{checkpointId}},\n  \"stepIndex\": 0,\n  \"parsedStep\": {\n    \"action\": \"WAIT\",\n    \"target\": {\n      \"selectors\": [\n        {\n          \"type\": \"GUESS\",\n          \"value\": \"{\\\"clue\\\":\\\"Example Domain\\\"}\"\n        }\n      ]\n    },\n    \"value\": \"20000\",\n    \"meta\": {}\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/teststeps",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"teststeps"
							]
						},
						"description": "Creates a test step within a checkpoint.\n\n**Required Parameters:**\n- `checkpointId`: The ID of the checkpoint\n- `stepIndex`: Position of the step in the checkpoint (0-based)\n- `parsedStep`: Details of the step action\n\n**Response:**\nReturns the created test step with an ID.\n\n**Example Step Types:**\n1. **WAIT Step** (Current Example):\n   - Waits for an element with text \"Example Domain\" to appear\n   - Includes a timeout value of 20000ms (20 seconds)\n   - Useful for elements that load dynamically or after page transitions\n\n2. **CLICK Step** (Alternative):\n   ```json\n   {\n     \"checkpointId\": {{checkpoint_id}},\n     \"stepIndex\": 0,\n     \"parsedStep\": {\n       \"action\": \"CLICK\",\n       \"target\": {\n         \"selectors\": [\n           {\n             \"type\": \"GUESS\",\n             \"value\": \"{\\\"clue\\\":\\\"Submit\\\"}\"\n           }\n         ]\n       },\n       \"value\": \"\",\n       \"meta\": {}\n     }\n   }\n   ```\n\n**Important Notes:**\n- The checkpoint must be attached to a journey before adding steps\n- Test steps can only be added to valid checkpoints\n- This operation may fail due to API permissions or other constraints, but the collection will continue running"
					},
					"response": []
				}
			]
		},
		{
			"name": "List Structure",
			"item": [
				{
					"name": "List Projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/projects?organizationId={{organizationId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "organizationId",
									"value": "{{organizationId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Goals",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/projects/{{projectId}}/goals?archived=false",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"goals"
							],
							"query": [
								{
									"key": "archived",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Goal Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/goals/{{goalId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"goals",
								"{{goalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Goal SnapshotId (version)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/goals/{{goalId}}/versions",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"goals",
								"{{goalId}}",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Journeys with Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/testsuites/latest_status?snapshotId={{snapshotId}}&goalId={{goalId}}&includeSequencesDetails=true",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"testsuites",
								"latest_status"
							],
							"query": [
								{
									"key": "snapshotId",
									"value": "{{snapshotId}}"
								},
								{
									"key": "goalId",
									"value": "{{goalId}}"
								},
								{
									"key": "includeSequencesDetails",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Checkpoints & Steps",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/testsuites/{{journeyId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"testsuites",
								"{{journeyId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Steps",
			"item": [
				{
					"name": "Navigation and Control",
					"item": [
						{
							"name": "NAVIGATE",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 0,\n    \"parsedStep\": {\n        \"action\": \"NAVIGATE\",\n        \"value\": \"https://example.com\",\n        \"meta\": {\n            \"kind\": \"NAVIGATE\",\n            \"type\": \"URL\",\n            \"useNewTab\": false\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "WAIT - for Time",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 1,\n    \"parsedStep\": {\n        \"action\": \"WAIT\",\n        \"value\": \"2000\",\n        \"meta\": {\n            \"kind\": \"WAIT\",\n            \"type\": \"TIME\",\n            \"duration\": 2000,\n            \"poll\": 100\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "WAIT - for Element",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 2,\n    \"parsedStep\": {\n        \"action\": \"WAIT\",\n        \"value\": \"5000\",\n        \"element\": {\n            \"target\": {\n                \"selectors\": [\n                    {\n                        \"type\": \"GUESS\",\n                        \"value\": \"{\\\"clue\\\":\\\"Logged in!\\\"}\"\n                    }\n                ]\n            }\n        },\n        \"meta\": {\n            \"duration\": 5000,\n            \"kind\": \"WAIT\",\n            \"poll\": 100,\n            \"type\": \"ELEMENT\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "WINDOW - Resize",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 4,\n    \"parsedStep\": {\n        \"action\": \"WINDOW\",\n        \"value\": \"\",\n        \"meta\": {\n            \"kind\": \"WINDOW\",\n            \"type\": \"RESIZE\",\n            \"dimension\": {\n                \"width\": 1920,\n                \"height\": 1080\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Mouse Actions",
					"item": [
						{
							"name": "CLICK",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 5,\n    \"parsedStep\": {\n        \"action\": \"CLICK\",\n        \"value\": \"\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Submit\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"CLICK\",\n            \"type\": \"NATURAL\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "MOUSE - Double Click",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 6,\n    \"parsedStep\": {\n        \"action\": \"MOUSE\",\n        \"value\": \"\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Element\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"MOUSE\",\n            \"action\": \"DOUBLE_CLICK\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "MOUSE - Hover (Over)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 7,\n    \"parsedStep\": {\n        \"action\": \"MOUSE\",\n        \"value\": \"\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Tooltip Trigger\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"MOUSE\",\n            \"action\": \"OVER\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "MOUSE - Right Click",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 8,\n    \"parsedStep\": {\n        \"action\": \"MOUSE\",\n        \"value\": \"\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Context Menu\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"MOUSE\",\n            \"action\": \"RIGHT_CLICK\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								},
								"description": "### Add Test Step\n\nThis endpoint allows users to add a new test step associated with a specific checkpoint in the testing framework.\n\n#### Request Parameters\n\nThe request must include a JSON payload with the following parameters:\n\n- **checkpointId** (string): The unique identifier for the checkpoint to which the test step is being added.\n    \n- **stepIndex** (integer): The index of the step within the sequence of test steps.\n    \n- **parsedStep** (object): An object containing detailed information about the test step, which includes:\n    \n    - **action** (string): The type of action to be performed (e.g., \"MOUSE\").\n        \n    - **value** (string): Additional value related to the action, if applicable (can be empty).\n        \n    - **target** (object): Specifies the target of the action, which includes:\n        \n        - **selectors** (array): An array of selector objects, where each object contains:\n            \n            - **type** (string): The type of selector (e.g., \"GUESS\").\n                \n            - **value** (string): The selector value in JSON format.\n                \n    - **meta** (object): Metadata about the action, which includes:\n        \n        - **kind** (string): The kind of action (e.g., \"MOUSE\").\n            \n        - **action** (string): The specific action being performed (e.g., \"RIGHT_CLICK\").\n            \n\n#### Expected Response\n\nUpon successful addition of the test step, the API will return a response indicating the result of the operation. The expected response structure will typically include confirmation of the added test step, along with any relevant identifiers or status messages.\n\n#### Notes\n\n- Ensure that the `checkpointId` provided corresponds to an existing checkpoint in the system.\n    \n- The `stepIndex` should be unique and properly reflect the sequence of steps.\n    \n- The `parsedStep` object must be well-formed to avoid errors during processing."
							},
							"response": []
						},
						{
							"name": "MOUSE - Move",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 8,\n    \"parsedStep\": {\n        \"action\": \"MOUSE\",\n        \"value\": \"\",\n        \"meta\": {\n            \"kind\": \"MOUSE\",\n            \"x\": 100,\n            \"y\": 400,\n            \"action\": \"MOVE\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "MOUSE - Enter",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 8,\n    \"parsedStep\": {\n        \"action\": \"MOUSE\",\n        \"value\": \"\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Username\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"MOUSE\",\n            \"action\": \"ENTER\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "MOUSE - Down/Up",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 8,\n    \"parsedStep\": {\n        \"action\": \"MOUSE\",\n        \"value\": \"\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Draggable Item\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"MOUSE\",\n            \"action\": \"DOWN\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Input and Forms",
					"item": [
						{
							"name": "WRITE",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 9,\n    \"parsedStep\": {\n        \"action\": \"WRITE\",\n        \"value\": \"test@example.com\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Email Field\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"WRITE\",\n            \"append\": false\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "KEY",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 10,\n    \"parsedStep\": {\n        \"action\": \"KEY\",\n        \"value\": \"ENTER\",\n        \"meta\": {\n            \"kind\": \"KEYBOARD\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "PICK - by Visible Text",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 11,\n    \"parsedStep\": {\n        \"action\": \"PICK\",\n        \"value\": \"United States\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Country Dropdown\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"PICK\",\n            \"type\": \"VISIBLE_TEXT\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "PICK - by Value",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 11,\n    \"parsedStep\": {\n        \"action\": \"PICK\",\n        \"value\": \"Med\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Size\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"PICK\",\n            \"type\": \"VALUE\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "UPLOAD",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 12,\n    \"parsedStep\": {\n        \"action\": \"UPLOAD\",\n        \"value\": \"https://example.com/file.pdf\",\n        \"element\": {\n            \"target\": {\n                \"selectors\": [\n                    {\n                        \"type\": \"GUESS\",\n                        \"value\": \"{\\\"clue\\\":\\\"File Input\\\"}\"\n                    }\n                ]\n            }\n        },\n        \"meta\": {\n            \"kind\": \"UPLOAD\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Scroll Actions",
					"item": [
						{
							"name": "SCROLL - to Top",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 13,\n    \"parsedStep\": {\n        \"action\": \"SCROLL\",\n        \"value\": \"\",\n        \"meta\": {\n            \"kind\": \"SCROLL\",\n            \"type\": \"TOP\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "SCROLL - to Bottom",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 14,\n    \"parsedStep\": {\n        \"action\": \"SCROLL\",\n        \"value\": \"\",\n        \"meta\": {\n            \"kind\": \"SCROLL\",\n            \"type\": \"BOTTOM\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "SCROLL - to Position",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 15,\n    \"parsedStep\": {\n        \"action\": \"SCROLL\",\n        \"value\": \"\",\n        \"meta\": {\n            \"kind\": \"SCROLL\",\n            \"x\": 20,\n            \"y\": 40,\n            \"type\": \"POSITION\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "SCROLL - to Element",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"checkpointId\":1662472,\"stepIndex\":35,\"parsedStep\":{\"action\":\"SCROLL\",\"target\":{\"selectors\":[{\"type\":\"GUESS\",\"value\":\"{\\\"clue\\\":\\\"element\\\"}\"}]},\"value\":\"\",\"meta\":{\"type\":\"ELEMENT\"}}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Assertions",
					"item": [
						{
							"name": "ASSERT_EXISTS",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 17,\n    \"parsedStep\": {\n        \"action\": \"ASSERT_EXISTS\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Success Message\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"ASSERT\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "ASSERT_NOT_EXISTS",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 18,\n    \"parsedStep\": {\n        \"action\": \"ASSERT_NOT_EXISTS\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Error message\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"ASSERT\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "ASSERT_EQUALS",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 19,\n    \"parsedStep\": {\n        \"action\": \"ASSERT_EQUALS\",\n        \"value\": \"John\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"First name\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"ASSERT\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "ASSERT_VARIABLE",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 20,\n    \"parsedStep\": {\n        \"action\": \"ASSERT_VARIABLE\",\n        \"variable\": \"result\",\n        \"value\": \"expected value\",\n        \"meta\": {\n            \"kind\": \"ASSERT_VARIABLE\",\n            \"type\": \"EQUALS\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "ASSERT_LESS_THAN_OR_EQUAL",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 21,\n    \"parsedStep\": {\n        \"action\": \"ASSERT_LESS_THAN_OR_EQUAL\",\n        \"value\": \"50\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Quantity\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"ASSERT\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "ASSERT_SELECTED",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 22,\n    \"parsedStep\": {\n        \"action\": \"ASSERT_SELECTED\",\n        \"value\": \"January\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Month\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"ASSERT\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "ASSERT_CHECKED",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 23,\n    \"parsedStep\": {\n        \"action\": \"ASSERT_CHECKED\",\n        \"value\": \"\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"Accept terms\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"ASSERT\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Data Operations",
					"item": [
						{
							"name": "STORE - from Element",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 24,\n    \"parsedStep\": {\n        \"action\": \"STORE\",\n        \"variable\": \"user_pass\",\n        \"target\": {\n            \"selectors\": [\n                {\n                    \"type\": \"GUESS\",\n                    \"value\": \"{\\\"clue\\\":\\\"password\\\"}\"\n                }\n            ]\n        },\n        \"meta\": {\n            \"kind\": \"STORE\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "STORE - from Value",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 25,\n    \"parsedStep\": {\n        \"action\": \"STORE\",\n        \"variable\": \"myVariable\",\n        \"value\": \"Hello World\",\n        \"meta\": {\n            \"kind\": \"STORE\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "EXECUTE",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": 1662472,\n    \"stepIndex\": 35,\n    \"parsedStep\": {\n        \"action\": \"EXECUTE\",\n        \"value\": \"return document.title;\",\n        \"meta\": {\n            \"explicit\": true,\n            \"script\": \"return document.title;\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Browser Management",
					"item": [
						{
							"name": "ENVIRONMENT - Add Cookie",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 27,\n    \"parsedStep\": {\n        \"action\": \"ENVIRONMENT\",\n        \"value\": \"username\",\n        \"meta\": {\n            \"kind\": \"ENVIRONMENT\",\n            \"name\": \"login\",\n            \"type\": \"ADD\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "ENVIRONMENT - Delete Cookie",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 28,\n    \"parsedStep\": {\n        \"action\": \"ENVIRONMENT\",\n        \"value\": \"\",\n        \"meta\": {\n            \"kind\": \"ENVIRONMENT\",\n            \"name\": \"login\",\n            \"type\": \"DELETE\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "ENVIRONMENT - Clear All Cookies",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 29,\n    \"parsedStep\": {\n        \"action\": \"ENVIRONMENT\",\n        \"value\": \"\",\n        \"meta\": {\n            \"kind\": \"ENVIRONMENT\",\n            \"type\": \"CLEAR\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "DISMISS - Alert",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 30,\n    \"parsedStep\": {\n        \"action\": \"DISMISS\",\n        \"value\": \"\",\n        \"meta\": {\n            \"kind\": \"DISMISS\",\n            \"type\": \"ALERT\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "DISMISS - Prompt (OK)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 31,\n    \"parsedStep\": {\n        \"action\": \"DISMISS\",\n        \"value\": \"response_value\",\n        \"meta\": {\n            \"kind\": \"DISMISS\",\n            \"action\": \"OK\",\n            \"type\": \"PROMPT\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "DISMISS - Confirm (Cancel)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 32,\n    \"parsedStep\": {\n        \"action\": \"DISMISS\",\n        \"value\": \"\",\n        \"meta\": {\n            \"kind\": \"DISMISS\",\n            \"action\": \"CANCEL\",\n            \"type\": \"CONFIRM\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						},
						{
							"name": "COMMENT",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"checkpointId\": \"{{checkpointId}}\",\n    \"stepIndex\": 33,\n    \"parsedStep\": {\n        \"action\": \"COMMENT\",\n        \"value\": \"This is a test comment\",\n        \"meta\": {\n            \"kind\": \"COMMENT\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/teststeps",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"teststeps"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Execute",
			"item": [
				{
					"name": "Execute Goal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 9c935bad-bae2-46be-a0c8-d7e09cd3478e",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"tags\":[],\"suiteIds\":[]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/goals/13548/snapshots/43377/execute",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"goals",
								"13548",
								"snapshots",
								"43377",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Execute Journey",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 9c935bad-bae2-46be-a0c8-d7e09cd3478e",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"testSuiteCanonicalIds\":[\"a6794c26-3b78-4a69-8bbb-448048aad819\"]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/goals/13548/snapshots/43376/execute",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"goals",
								"13548",
								"snapshots",
								"43376",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Execution Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/testsuites/latest_status?jobId=162262&includeSequencesDetails=true&includeTrackingDetails=true",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"testsuites",
								"latest_status"
							],
							"query": [
								{
									"key": "jobId",
									"value": "162262"
								},
								{
									"key": "includeSequencesDetails",
									"value": "true"
								},
								{
									"key": "includeTrackingDetails",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Execution Report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/testsuites/execution?suiteId%5B%5D=606113&jobId=162263&includeJourneyDetails=true",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"testsuites",
								"execution"
							],
							"query": [
								{
									"key": "suiteId%5B%5D",
									"value": "606113"
								},
								{
									"key": "jobId",
									"value": "162263"
								},
								{
									"key": "includeJourneyDetails",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Step Failure Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/executions/162263/suites/606113/cases/1674875/steps/19600813",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"executions",
								"162263",
								"suites",
								"606113",
								"cases",
								"1674875",
								"steps",
								"19600813"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Detailed Step Execution Details and AI Analysis",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/executions/analysis/20015311",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"executions",
								"analysis",
								"20015311"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Step Change History",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/timelines/journeys/606113/checkpoints/1674875/steps/19600813?pageSize=20",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"timelines",
								"journeys",
								"606113",
								"checkpoints",
								"1674875",
								"steps",
								"19600813"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Extensions",
			"item": [
				{
					"name": "Get Extensions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:139.0) Gecko/20100101 Firefox/139.0"
							},
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "Accept-Language",
								"value": "en-GB,en;q=0.5"
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br, zstd"
							},
							{
								"key": "X-V-SESSION-ID",
								"value": "joqSmIeR4QhFEUyOvV2bNLyHZCylNV8Btg7A5WIv"
							},
							{
								"key": "X-Virtuoso-Client-Name",
								"value": "Virtuoso UI"
							},
							{
								"key": "X-Virtuoso-Client-ID",
								"value": "1750841907796_ddff0f6_production"
							},
							{
								"key": "Authorization",
								"value": "Bearer 9233e110-2af5-4689-af4f-3327fc7b73c5"
							},
							{
								"key": "sentry-trace",
								"value": "9251744c3b8a4e009f5ac1f62c5c1b05-a00500e52d5e1544-0"
							},
							{
								"key": "baggage",
								"value": "sentry-environment=production,sentry-release=ddff0f64cb19817938fba9457ebc3c9e3bd516b9,sentry-public_key=2178b2d23df743469699881a1756168a,sentry-trace_id=9251744c3b8a4e009f5ac1f62c5c1b05,sentry-transaction=Extension%20Manager,sentry-sampled=false,sentry-sample_rand=0.2767038674431529,sentry-sample_rate=0.1"
							},
							{
								"key": "Origin",
								"value": "https://app.virtuoso.qa"
							},
							{
								"key": "DNT",
								"value": "1"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Referer",
								"value": "https://app.virtuoso.qa/"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-site"
							},
							{
								"key": "Priority",
								"value": "u=0"
							},
							{
								"key": "TE",
								"value": "trailers"
							}
						],
						"url": {
							"raw": "{{baseURL}}/projects/102687/scripts?includeBody=false",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects",
								"102687",
								"scripts"
							],
							"query": [
								{
									"key": "includeBody",
									"value": "false"
								},
								{
									"key": "envelope",
									"value": "false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Script",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "en-GB,en;q=0.5",
								"type": "text"
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br, zstd",
								"type": "text"
							},
							{
								"key": "X-V-SESSION-ID",
								"value": "joqSmIeR4QhFEUyOvV2bNLyHZCylNV8Btg7A5WIv",
								"type": "text"
							},
							{
								"key": "X-Virtuoso-Client-Name",
								"value": "Virtuoso UI",
								"type": "text"
							},
							{
								"key": "X-Virtuoso-Client-ID",
								"value": "1750841907796_ddff0f6_production",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer 9233e110-2af5-4689-af4f-3327fc7b73c5",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/scripts/42861?includeBody=true&envelope=false",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"scripts",
								"42861"
							],
							"query": [
								{
									"key": "includeBody",
									"value": "true"
								},
								{
									"key": "envelope",
									"value": "false"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "APIs",
			"item": [
				{
					"name": "Get APIs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:139.0) Gecko/20100101 Firefox/139.0"
							},
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "Accept-Language",
								"value": "en-GB,en;q=0.5"
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br, zstd"
							},
							{
								"key": "X-V-SESSION-ID",
								"value": "tISJIbdkopxE7ePr5lZdxP9hwY3MZOmk6aiowEvr"
							},
							{
								"key": "X-Virtuoso-Client-Name",
								"value": "Virtuoso UI"
							},
							{
								"key": "X-Virtuoso-Client-ID",
								"value": "1750935257835_4035e8b_production"
							},
							{
								"key": "Authorization",
								"value": "Bearer 12c5b8a7-091c-422b-a6fb-319c001e8951"
							},
							{
								"key": "sentry-trace",
								"value": "93ddf1dff8fa4efeaf9930b5a789b751-9f48891d55340a8b-0"
							},
							{
								"key": "baggage",
								"value": "sentry-environment=freetrial,sentry-release=4035e8b1a475b84ae2692efb70125ebeff9dc7ac,sentry-public_key=2178b2d23df743469699881a1756168a,sentry-trace_id=93ddf1dff8fa4efeaf9930b5a789b751,sentry-transaction=api-manager,sentry-sampled=false,sentry-sample_rand=0.6715900583812897,sentry-sample_rate=0.1"
							},
							{
								"key": "Origin",
								"value": "https://app2.virtuoso.qa"
							},
							{
								"key": "DNT",
								"value": "1"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Referer",
								"value": "https://app2.virtuoso.qa/"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-site"
							},
							{
								"key": "TE",
								"value": "trailers"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api-tests?projectId=7475&detailed=true&envelope=false",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api-tests"
							],
							"query": [
								{
									"key": "projectId",
									"value": "7475"
								},
								{
									"key": "detailed",
									"value": "true"
								},
								{
									"key": "envelope",
									"value": "false"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "f7a55516-5cc4-4529-b2ae-8e106a7d164e",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "organizationId",
			"value": "2027",
			"type": "default"
		},
		{
			"key": "baseURL",
			"value": "https://api-app2.virtuoso.qa",
			"type": "default"
		},
		{
			"key": "projectName",
			"value": "Project",
			"type": "default"
		},
		{
			"key": "X-Virtuoso-Client-ID",
			"value": "virtuoso-external",
			"type": "default"
		},
		{
			"key": "X-Virtuoso-Client-Name",
			"value": "Virtuoso External",
			"type": "default"
		},
		{
			"key": "goalName",
			"value": "Goal",
			"type": "default"
		},
		{
			"key": "projectId",
			"value": "8136",
			"type": "default"
		},
		{
			"key": "goalId",
			"value": "12598"
		},
		{
			"key": "snapshotId",
			"value": "41788"
		},
		{
			"key": "journeyId",
			"value": "600778"
		},
		{
			"key": "checkpointId",
			"value": "1663710"
		},
		{
			"key": "checkpointPosition",
			"value": "2",
			"type": "default"
		},
		{
			"key": "stepId",
			"value": ""
		},
		{
			"key": "journeyName",
			"value": "Journey_{{$randomUUID}}",
			"type": "string"
		}
	]
}