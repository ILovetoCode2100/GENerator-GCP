=== COMPREHENSIVE CLI COMMANDS TEST ===
Test Date: Mon 14 Jul 2025 03:17:24 BST
Project Name: Test_Project_20250714_031724

Project ID: 9172
Goal ID: 13940
Snapshot ID: 43956
Journey ID: 608919
Checkpoint ID: 1680928

--- Testing: assert - assert ---
Command: ./bin/api-cli assert exists '#login-button' 1
Status: SUCCESS
Output: ✅ Created ASSERT_EXISTS step at position 1
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: see "'#login-button'"
   ⚙️  Context: 🔗 session context
   📊 Extra: map[element:'#login-button']

--- Testing: assert - assert ---
Command: ./bin/api-cli assert not-exists '#old-element' 2
Status: SUCCESS
Output: ✅ Created ASSERT_NOT_EXISTS step at position 2
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: not see "'#old-element'"
   ⚙️  Context: 🔗 session context
   📊 Extra: map[element:'#old-element']

--- Testing: assert - assert ---
Command: ./bin/api-cli assert equals '#username' 'test@example.com' 3
Status: SUCCESS
Output: ✅ Created ASSERT_EQUALS step at position 3
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: expect '#username' to have text "'test@example.com'"
   ⚙️  Context: 🔗 session context
   📊 Extra: map[element:'#username' value:'test@example.com']

--- Testing: assert - assert ---
Command: ./bin/api-cli assert not-equals '#status' 'offline' 4
Status: SUCCESS
Output: ✅ Created ASSERT_NOT_EQUALS step at position 4
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: expect '#status' to not have text "'offline'"
   ⚙️  Context: 🔗 session context
   📊 Extra: map[element:'#status' value:'offline']

--- Testing: assert - assert ---
Command: ./bin/api-cli assert checked '#remember-me' 5
Status: SUCCESS
Output: ✅ Created ASSERT_CHECKED step at position 5
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: expect "'#remember-me'" to be checked
   ⚙️  Context: 🔗 session context
   📊 Extra: map[element:'#remember-me']

--- Testing: assert - assert ---
Command: ./bin/api-cli assert selected '#country-usa' 6
Status: SUCCESS
Output: ✅ Created ASSERT_SELECTED step at position 6
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: expect "'#country-usa'" to be selected
   ⚙️  Context: 🔗 session context
   📊 Extra: map[element:'#country-usa']

--- Testing: assert - assert ---
Command: ./bin/api-cli assert variable 'userRole' 'admin' 7
Status: FAILED
Exit Code: 1
Error: Error: failed to create ASSERT_VARIABLE step: add step failed with status 400: {"success":false,"error":{"code":"2605","message":"Variable syntax is invalid"}}
Usage:
  api-cli assert variable VARIABLE_NAME EXPECTED_VALUE [POSITION] [flags]

Flags:
      --checkpoint int   Checkpoint ID (overrides session context)
  -h, --help             help for variable

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

failed to create ASSERT_VARIABLE step: add step failed with status 400: {"success":false,"error":{"code":"2605","message":"Variable syntax is invalid"}}

--- Testing: assert - assert ---
Command: ./bin/api-cli assert gt '#price' '100' 7
Status: SUCCESS
Output: ✅ Created ASSERT_GREATER_THAN step at position 7
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: expect '#price' to be greater than '100'
   ⚙️  Context: 🔗 session context
   📊 Extra: map[element:'#price' value:'100']

--- Testing: assert - assert ---
Command: ./bin/api-cli assert gte '#quantity' '10' 8
Status: SUCCESS
Output: ✅ Created ASSERT_GREATER_THAN_OR_EQUAL step at position 8
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: expect '#quantity' to be greater than or equal to '10'
   ⚙️  Context: 🔗 session context
   📊 Extra: map[element:'#quantity' value:'10']

--- Testing: assert - assert ---
Command: ./bin/api-cli assert lt '#discount' '50' 9
Status: SUCCESS
Output: ✅ Created ASSERT_LESS_THAN step at position 9
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: expect '#discount' to be less than '50'
   ⚙️  Context: 🔗 session context
   📊 Extra: map[element:'#discount' value:'50']

--- Testing: assert - assert ---
Command: ./bin/api-cli assert lte '#tax' '15' 10
Status: SUCCESS
Output: ✅ Created ASSERT_LESS_THAN_OR_EQUAL step at position 10
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: expect '#tax' to be less than or equal to '15'
   ⚙️  Context: 🔗 session context
   📊 Extra: map[element:'#tax' value:'15']

--- Testing: assert - assert ---
Command: ./bin/api-cli assert matches '#email' '^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$' 11
Status: SUCCESS
Output: ✅ Created ASSERT_MATCHES step at position 11
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: expect '#email' to match pattern "'^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$'"
   ⚙️  Context: 🔗 session context
   📊 Extra: map[element:'#email' value:'^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$']

--- Testing: interact - interact ---
Command: ./bin/api-cli interact click '#submit-button' 12
Status: SUCCESS
Output: Step created successfully!
ID: 0
Type: click
Position: 12

--- Testing: interact - interact ---
Command: ./bin/api-cli interact double-click '#header-logo' 13
Status: SUCCESS
Output: Step created successfully!
ID: 0
Type: double-click
Position: 13

--- Testing: interact - interact ---
Command: ./bin/api-cli interact right-click '#context-menu' 14
Status: SUCCESS
Output: Step created successfully!
ID: 0
Type: right-click
Position: 14

--- Testing: interact - interact ---
Command: ./bin/api-cli interact hover '#dropdown-menu' 15
Status: SUCCESS
Output: Step created successfully!
ID: 0
Type: hover
Position: 15

--- Testing: interact - interact ---
Command: ./bin/api-cli interact write '#search-input' 'test search query' 16
Status: SUCCESS
Output: Step created successfully!
ID: 0
Type: write
Position: 16

--- Testing: interact - interact ---
Command: ./bin/api-cli interact key 'Enter' 17 --target '#search-input'
Status: SUCCESS
Output: Step created successfully!
ID: 0
Type: key
Position: 17

--- Testing: navigate - navigate ---
Command: ./bin/api-cli navigate to https://example.com 18
Status: SUCCESS
Output: Step created successfully!
ID: 0
Type: navigate-to
Position: 18

--- Testing: navigate - navigate ---
Command: ./bin/api-cli navigate to https://example.com/page2 19 --new-tab
Status: SUCCESS
Output: Step created successfully!
ID: 0
Type: navigate-to
Position: 19

--- Testing: navigate - navigate ---
Command: ./bin/api-cli navigate scroll-to '#footer' 20
Status: SUCCESS
Output: Navigate to URLs and scroll within pages using various methods.

This command consolidates URL navigation and scrolling actions.

Usage:
  api-cli navigate [command]

Available Commands:
  scroll-bottom   Scroll to the bottom of the page
  scroll-element  Scroll an element into view
  scroll-position Scroll to specific coordinates
  scroll-top      Scroll to the top of the page
  to              Navigate to a URL

Flags:
  -h, --help   help for navigate

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli navigate [command] --help" for more information about a command.

--- Testing: navigate - navigate ---
Command: ./bin/api-cli navigate scroll-top 21
Status: FAILED
Exit Code: 2
Error: panic: runtime error: index out of range [0] with length 0

goroutine 1 [running]:
github.com/marklovelady/api-cli-generator/pkg/api-cli/commands.(*BaseCommand).ResolveCheckpointAndPosition(0x14000033a68, {0x140001e2b30, 0x1, 0x1}, 0x0)
	/Users/marklovelady/_dev/_projects/virtuoso-api-cli-generator/pkg/api-cli/commands/base.go:107 +0x420
github.com/marklovelady/api-cli-generator/pkg/api-cli/commands.runNavigation(0x1014e2000?, {0x140001e2b30, 0x1, 0x1}, {0x101371b21, 0xa}, 0x14000033c30)
	/Users/marklovelady/_dev/_projects/virtuoso-api-cli-generator/pkg/api-cli/commands/navigate.go:239 +0x128
github.com/marklovelady/api-cli-generator/pkg/api-cli/commands.scrollTopSubCmd.func1(0x140001b5b08, {0x140001e2b30, 0x1, 0x1})
	/Users/marklovelady/_dev/_projects/virtuoso-api-cli-generator/pkg/api-cli/commands/navigate.go:86 +0xfc
github.com/spf13/cobra.(*Command).execute(0x140001b5b08, {0x140001e2b00, 0x1, 0x1})
	/Users/marklovelady/go/pkg/mod/github.com/spf13/cobra@v1.8.0/command.go:983 +0x854
github.com/spf13/cobra.(*Command).ExecuteC(0x1018c9280)
	/Users/marklovelady/go/pkg/mod/github.com/spf13/cobra@v1.8.0/command.go:1115 +0x378
github.com/spf13/cobra.(*Command).Execute(...)
	/Users/marklovelady/go/pkg/mod/github.com/spf13/cobra@v1.8.0/command.go:1039
main.main()
	/Users/marklovelady/_dev/_projects/virtuoso-api-cli-generator/cmd/api-cli/main.go:83 +0x30

--- Testing: navigate - navigate ---
Command: ./bin/api-cli navigate scroll-bottom 21
Status: FAILED
Exit Code: 2
Error: panic: runtime error: index out of range [0] with length 0

goroutine 1 [running]:
github.com/marklovelady/api-cli-generator/pkg/api-cli/commands.(*BaseCommand).ResolveCheckpointAndPosition(0x14000033a68, {0x140001e2b30, 0x1, 0x1}, 0x0)
	/Users/marklovelady/_dev/_projects/virtuoso-api-cli-generator/pkg/api-cli/commands/base.go:107 +0x420
github.com/marklovelady/api-cli-generator/pkg/api-cli/commands.runNavigation(0x100922000?, {0x140001e2b30, 0x1, 0x1}, {0x1007b3b15, 0xd}, 0x14000033c30)
	/Users/marklovelady/_dev/_projects/virtuoso-api-cli-generator/pkg/api-cli/commands/navigate.go:239 +0x128
github.com/marklovelady/api-cli-generator/pkg/api-cli/commands.scrollBottomSubCmd.func1(0x140001b8008, {0x140001e2b30, 0x1, 0x1})
	/Users/marklovelady/_dev/_projects/virtuoso-api-cli-generator/pkg/api-cli/commands/navigate.go:116 +0xfc
github.com/spf13/cobra.(*Command).execute(0x140001b8008, {0x140001e2b00, 0x1, 0x1})
	/Users/marklovelady/go/pkg/mod/github.com/spf13/cobra@v1.8.0/command.go:983 +0x854
github.com/spf13/cobra.(*Command).ExecuteC(0x100d09280)
	/Users/marklovelady/go/pkg/mod/github.com/spf13/cobra@v1.8.0/command.go:1115 +0x378
github.com/spf13/cobra.(*Command).Execute(...)
	/Users/marklovelady/go/pkg/mod/github.com/spf13/cobra@v1.8.0/command.go:1039
main.main()
	/Users/marklovelady/_dev/_projects/virtuoso-api-cli-generator/cmd/api-cli/main.go:83 +0x30

--- Testing: data - data ---
Command: ./bin/api-cli data store-text '#product-name' 'productVar' 21
Status: SUCCESS
Output: Create data management steps including storing values in variables and managing cookies.

This command consolidates all data-related operations into a single command with subcommands.

Available operations:
  - store: Store values in variables
    - element-text: Store element text in variable
    - literal: Store literal value in variable
  - cookie: Manage browser cookies
    - create: Create a new cookie
    - delete: Delete a specific cookie
    - clear-all: Clear all cookies

Usage:
  api-cli data [command]

Examples:
  # Store element text in variable
  api-cli data store element-text "Username field" "current_user"

  # Store literal value in variable
  api-cli data store literal "test@example.com" "test_email"

  # Create a cookie
  api-cli data cookie create "session" "abc123"

  # Delete a cookie
  api-cli data cookie delete "session"

  # Clear all cookies
  api-cli data cookie clear-all

Available Commands:
  cookie      Manage browser cookies
  store       Store values in variables

Flags:
  -h, --help   help for data

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli data [command] --help" for more information about a command.

--- Testing: data - data ---
Command: ./bin/api-cli data store-value 'TestValue123' 'testVar' 22
Status: SUCCESS
Output: Create data management steps including storing values in variables and managing cookies.

This command consolidates all data-related operations into a single command with subcommands.

Available operations:
  - store: Store values in variables
    - element-text: Store element text in variable
    - literal: Store literal value in variable
  - cookie: Manage browser cookies
    - create: Create a new cookie
    - delete: Delete a specific cookie
    - clear-all: Clear all cookies

Usage:
  api-cli data [command]

Examples:
  # Store element text in variable
  api-cli data store element-text "Username field" "current_user"

  # Store literal value in variable
  api-cli data store literal "test@example.com" "test_email"

  # Create a cookie
  api-cli data cookie create "session" "abc123"

  # Delete a cookie
  api-cli data cookie delete "session"

  # Clear all cookies
  api-cli data cookie clear-all

Available Commands:
  cookie      Manage browser cookies
  store       Store values in variables

Flags:
  -h, --help   help for data

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli data [command] --help" for more information about a command.

--- Testing: data - data ---
Command: ./bin/api-cli data cookie-create 'sessionId' 'abc123xyz' 23
Status: SUCCESS
Output: Create data management steps including storing values in variables and managing cookies.

This command consolidates all data-related operations into a single command with subcommands.

Available operations:
  - store: Store values in variables
    - element-text: Store element text in variable
    - literal: Store literal value in variable
  - cookie: Manage browser cookies
    - create: Create a new cookie
    - delete: Delete a specific cookie
    - clear-all: Clear all cookies

Usage:
  api-cli data [command]

Examples:
  # Store element text in variable
  api-cli data store element-text "Username field" "current_user"

  # Store literal value in variable
  api-cli data store literal "test@example.com" "test_email"

  # Create a cookie
  api-cli data cookie create "session" "abc123"

  # Delete a cookie
  api-cli data cookie delete "session"

  # Clear all cookies
  api-cli data cookie clear-all

Available Commands:
  cookie      Manage browser cookies
  store       Store values in variables

Flags:
  -h, --help   help for data

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli data [command] --help" for more information about a command.

--- Testing: data - data ---
Command: ./bin/api-cli data cookie-delete 'sessionId' 24
Status: SUCCESS
Output: Create data management steps including storing values in variables and managing cookies.

This command consolidates all data-related operations into a single command with subcommands.

Available operations:
  - store: Store values in variables
    - element-text: Store element text in variable
    - literal: Store literal value in variable
  - cookie: Manage browser cookies
    - create: Create a new cookie
    - delete: Delete a specific cookie
    - clear-all: Clear all cookies

Usage:
  api-cli data [command]

Examples:
  # Store element text in variable
  api-cli data store element-text "Username field" "current_user"

  # Store literal value in variable
  api-cli data store literal "test@example.com" "test_email"

  # Create a cookie
  api-cli data cookie create "session" "abc123"

  # Delete a cookie
  api-cli data cookie delete "session"

  # Clear all cookies
  api-cli data cookie clear-all

Available Commands:
  cookie      Manage browser cookies
  store       Store values in variables

Flags:
  -h, --help   help for data

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli data [command] --help" for more information about a command.

--- Testing: data - data ---
Command: ./bin/api-cli data cookie-clear 25
Status: SUCCESS
Output: Create data management steps including storing values in variables and managing cookies.

This command consolidates all data-related operations into a single command with subcommands.

Available operations:
  - store: Store values in variables
    - element-text: Store element text in variable
    - literal: Store literal value in variable
  - cookie: Manage browser cookies
    - create: Create a new cookie
    - delete: Delete a specific cookie
    - clear-all: Clear all cookies

Usage:
  api-cli data [command]

Examples:
  # Store element text in variable
  api-cli data store element-text "Username field" "current_user"

  # Store literal value in variable
  api-cli data store literal "test@example.com" "test_email"

  # Create a cookie
  api-cli data cookie create "session" "abc123"

  # Delete a cookie
  api-cli data cookie delete "session"

  # Clear all cookies
  api-cli data cookie clear-all

Available Commands:
  cookie      Manage browser cookies
  store       Store values in variables

Flags:
  -h, --help   help for data

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli data [command] --help" for more information about a command.

--- Testing: dialog - dialog ---
Command: ./bin/api-cli dialog dismiss-alert 26
Status: SUCCESS
Output: Create various types of dialog interaction steps in checkpoints.

This command consolidates all dialog-related operations for handling JavaScript alerts, confirms, and prompts.

Available dialog operations:
  - dismiss alert: Dismiss JavaScript alert dialogs
  - dismiss confirm: Dismiss confirmation dialogs (with accept/reject option)
  - dismiss prompt: Dismiss prompt dialogs (with accept/reject option)
  - dismiss prompt-with-text: Dismiss prompt dialogs with text input

Usage:
  api-cli dialog [command]

Examples:
  # Dismiss alert dialog
  api-cli dialog dismiss alert 1

  # Accept confirmation dialog
  api-cli dialog dismiss confirm --accept

  # Reject prompt dialog
  api-cli dialog dismiss prompt --reject

  # Accept prompt with text
  api-cli dialog dismiss prompt-with-text "My answer" --accept

Available Commands:
  dismiss     Dismiss various types of dialogs

Flags:
  -h, --help   help for dialog

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli dialog [command] --help" for more information about a command.

--- Testing: dialog - dialog ---
Command: ./bin/api-cli dialog dismiss-confirm 27
Status: SUCCESS
Output: Create various types of dialog interaction steps in checkpoints.

This command consolidates all dialog-related operations for handling JavaScript alerts, confirms, and prompts.

Available dialog operations:
  - dismiss alert: Dismiss JavaScript alert dialogs
  - dismiss confirm: Dismiss confirmation dialogs (with accept/reject option)
  - dismiss prompt: Dismiss prompt dialogs (with accept/reject option)
  - dismiss prompt-with-text: Dismiss prompt dialogs with text input

Usage:
  api-cli dialog [command]

Examples:
  # Dismiss alert dialog
  api-cli dialog dismiss alert 1

  # Accept confirmation dialog
  api-cli dialog dismiss confirm --accept

  # Reject prompt dialog
  api-cli dialog dismiss prompt --reject

  # Accept prompt with text
  api-cli dialog dismiss prompt-with-text "My answer" --accept

Available Commands:
  dismiss     Dismiss various types of dialogs

Flags:
  -h, --help   help for dialog

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli dialog [command] --help" for more information about a command.

--- Testing: dialog - dialog ---
Command: ./bin/api-cli dialog dismiss-prompt 'User Input' 28
Status: SUCCESS
Output: Create various types of dialog interaction steps in checkpoints.

This command consolidates all dialog-related operations for handling JavaScript alerts, confirms, and prompts.

Available dialog operations:
  - dismiss alert: Dismiss JavaScript alert dialogs
  - dismiss confirm: Dismiss confirmation dialogs (with accept/reject option)
  - dismiss prompt: Dismiss prompt dialogs (with accept/reject option)
  - dismiss prompt-with-text: Dismiss prompt dialogs with text input

Usage:
  api-cli dialog [command]

Examples:
  # Dismiss alert dialog
  api-cli dialog dismiss alert 1

  # Accept confirmation dialog
  api-cli dialog dismiss confirm --accept

  # Reject prompt dialog
  api-cli dialog dismiss prompt --reject

  # Accept prompt with text
  api-cli dialog dismiss prompt-with-text "My answer" --accept

Available Commands:
  dismiss     Dismiss various types of dialogs

Flags:
  -h, --help   help for dialog

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli dialog [command] --help" for more information about a command.

--- Testing: wait - wait ---
Command: ./bin/api-cli wait element '#loading-spinner' 29
Status: SUCCESS
Output: ✅ Created WAIT_ELEMENT step at position 29
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: wait until '#loading-spinner' appears
   ⚙️  Context: 🔗 session context
   📊 Extra: map[selector:'#loading-spinner']

--- Testing: wait - wait ---
Command: ./bin/api-cli wait element '#dynamic-content' 30 --timeout 10000
Status: SUCCESS
Output: ✅ Created WAIT_ELEMENT step at position 30
   📍 Step ID: 0
   🎯 Checkpoint: 1680928
   📝 Description: wait until '#dynamic-content' appears (timeout: 10000ms)
   ⚙️  Context: 🔗 session context
   📊 Extra: map[selector:'#dynamic-content' timeout_ms:10000]

--- Testing: wait - wait ---
Command: ./bin/api-cli wait time 2000 31
Status: SUCCESS
Output: ✅ Created WAIT_TIME step at position 31
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: wait 2.0 seconds
   ⚙️  Context: 🔗 session context
   📊 Extra: map[milliseconds:2000 seconds:2]

--- Testing: window - window ---
Command: ./bin/api-cli window resize 1920x1080 32
Status: SUCCESS
Output: ✅ Created RESIZE step at position 32
   📍 Step ID: 0
   🎯 Checkpoint: 1680928
   📝 Description: resize window to 1920x1080
   ⚙️  Context: 🔗 session context
   📊 Extra: map[height:1080 size:1920x1080 width:1920]

--- Testing: window - window ---
Command: ./bin/api-cli window resize 1024x768 33
Status: SUCCESS
Output: ✅ Created RESIZE step at position 33
   📍 Step ID: 0
   🎯 Checkpoint: 1680928
   📝 Description: resize window to 1024x768
   ⚙️  Context: 🔗 session context
   📊 Extra: map[height:768 size:1024x768 width:1024]

--- Testing: window - window ---
Command: ./bin/api-cli window switch-tab next 34
Status: SUCCESS
Output: Perform various window operations including tab switching, frame navigation, and window resizing.

This command consolidates all window-related operations:
  - Switch between iframes and parent frames
  - Navigate between browser tabs
  - Resize the browser window

Usage:
  api-cli window [command]

Examples:
  # Switch to iframe
  api-cli window switch iframe "#payment-frame" 1

  # Switch to next tab
  api-cli window switch tab next

  # Switch to parent frame
  api-cli window switch parent-frame

  # Resize window
  api-cli window resize 1024x768

Available Commands:
  resize      Resize browser window
  switch      Switch between frames and tabs

Flags:
  -h, --help   help for window

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli window [command] --help" for more information about a command.

--- Testing: window - window ---
Command: ./bin/api-cli window switch-tab prev 35
Status: SUCCESS
Output: Perform various window operations including tab switching, frame navigation, and window resizing.

This command consolidates all window-related operations:
  - Switch between iframes and parent frames
  - Navigate between browser tabs
  - Resize the browser window

Usage:
  api-cli window [command]

Examples:
  # Switch to iframe
  api-cli window switch iframe "#payment-frame" 1

  # Switch to next tab
  api-cli window switch tab next

  # Switch to parent frame
  api-cli window switch parent-frame

  # Resize window
  api-cli window resize 1024x768

Available Commands:
  resize      Resize browser window
  switch      Switch between frames and tabs

Flags:
  -h, --help   help for window

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli window [command] --help" for more information about a command.

--- Testing: window - window ---
Command: ./bin/api-cli window switch-frame '#iframe-content' 36
Status: SUCCESS
Output: Perform various window operations including tab switching, frame navigation, and window resizing.

This command consolidates all window-related operations:
  - Switch between iframes and parent frames
  - Navigate between browser tabs
  - Resize the browser window

Usage:
  api-cli window [command]

Examples:
  # Switch to iframe
  api-cli window switch iframe "#payment-frame" 1

  # Switch to next tab
  api-cli window switch tab next

  # Switch to parent frame
  api-cli window switch parent-frame

  # Resize window
  api-cli window resize 1024x768

Available Commands:
  resize      Resize browser window
  switch      Switch between frames and tabs

Flags:
  -h, --help   help for window

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli window [command] --help" for more information about a command.

--- Testing: mouse - mouse ---
Command: ./bin/api-cli mouse move-to 500 300 37
Status: SUCCESS
Output: ✅ Created MOUSE_MOVE_TO step at position 300
   📍 Step ID: 1
   🎯 Checkpoint: 1680928
   📝 Description: move mouse to (500, 300)
   ⚙️  Context: 🔗 session context
   📊 Extra: map[absolute:true x:500 y:300]

--- Testing: mouse - mouse ---
Command: ./bin/api-cli mouse move-by 100 -50 38
Status: FAILED
Exit Code: 1
Error: Error: unknown shorthand flag: '5' in -50
Usage:
  api-cli mouse move-by DX DY [POSITION] [flags]

Flags:
      --checkpoint int   Checkpoint ID (overrides session context)
  -h, --help             help for move-by

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

unknown shorthand flag: '5' in -50

--- Testing: mouse - mouse ---
Command: ./bin/api-cli mouse move 'smooth' 38
Status: SUCCESS
Output: ✅ Created MOUSE_MOVE step at position 38
   📍 Step ID: 0
   🎯 Checkpoint: 1680928
   📝 Description: move mouse to "'smooth'"
   ⚙️  Context: 🔗 session context
   📊 Extra: map[selector:'smooth']

--- Testing: mouse - mouse ---
Command: ./bin/api-cli mouse down 39
Status: SUCCESS
Output: ✅ Created MOUSE_DOWN step at position 1
   📍 Step ID: 0
   🎯 Checkpoint: 1680928
   📝 Description: mouse down on "39"
   ⚙️  Context: 🔗 session context, 🔄 auto-position
   📊 Extra: map[selector:39]

--- Testing: mouse - mouse ---
Command: ./bin/api-cli mouse up 40
Status: SUCCESS
Output: ✅ Created MOUSE_UP step at position 2
   📍 Step ID: 0
   🎯 Checkpoint: 1680928
   📝 Description: mouse up on "40"
   ⚙️  Context: 🔗 session context, 🔄 auto-position
   📊 Extra: map[selector:40]

--- Testing: mouse - mouse ---
Command: ./bin/api-cli mouse enter 41
Status: SUCCESS
Output: ✅ Created MOUSE_ENTER step at position 3
   📍 Step ID: 0
   🎯 Checkpoint: 1680928
   📝 Description: mouse enter "41"
   ⚙️  Context: 🔗 session context, 🔄 auto-position
   📊 Extra: map[selector:41]

--- Testing: select - select ---
Command: ./bin/api-cli select option '#country-dropdown' 'United States' 42
Status: SUCCESS
Output: Select options from dropdown elements using various methods.

This command consolidates dropdown selection operations:
  - Select by index (0-based)
  - Select last option

Index is 0-based, so first option is 0, second is 1, etc.

Usage:
  api-cli select [command]

Examples:
  # Select option by index (0-based)
  api-cli select index "Country dropdown" 2

  # Select last option
  api-cli select last "#country-select"

  # With explicit position
  api-cli select index ".dropdown" 0 5

Available Commands:
  index       Pick dropdown option by index
  last        Pick the last dropdown option

Flags:
  -h, --help   help for select

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli select [command] --help" for more information about a command.

--- Testing: select - select ---
Command: ./bin/api-cli select index '#state-dropdown' 5 43
Status: SUCCESS
Output: ✅ Created PICK step at position 5
   📍 Step ID: 0
   🎯 Checkpoint: 1680928
   📝 Description: pick option at index 5 from "'#state-dropdown'"
   ⚙️  Context: 🔗 session context
   📊 Extra: map[index:5 method:index selector:'#state-dropdown']

--- Testing: select - select ---
Command: ./bin/api-cli select last '#year-dropdown' 44
Status: SUCCESS
Output: ✅ Created PICK step at position 44
   📍 Step ID: 0
   🎯 Checkpoint: 1680928
   📝 Description: pick last option from "'#year-dropdown'"
   ⚙️  Context: 🔗 session context
   📊 Extra: map[index:-1 method:last selector:'#year-dropdown']

--- Testing: file - file ---
Command: ./bin/api-cli file upload '#file-upload' 'https://example.com/sample.pdf' 45
Status: FAILED
Exit Code: 1
Error: Error: failed to create upload step: file does not exist: 'https://example.com/sample.pdf'
Usage:
  api-cli file upload [checkpoint-id] <selector> <file-path> [position] [flags]

Flags:
  -h, --help   help for upload

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

failed to create upload step: file does not exist: 'https://example.com/sample.pdf'

--- Testing: misc - misc ---
Command: ./bin/api-cli misc comment 'Starting checkout process' 45
Status: SUCCESS
Output: Step created successfully!
ID: 0
Type: COMMENT
Position: 45
Description: Comment: 'Starting checkout process'
Meta:
  operation: comment
  content: 'Starting checkout process'

--- Testing: misc - misc ---
Command: ./bin/api-cli misc execute-script 'return document.title' 46
Status: SUCCESS
Output: Miscellaneous operations including adding comments and executing scripts.

This command consolidates various utility operations that don't fit into other categories.

Usage:
  api-cli misc [command]

Available Commands:
  comment     Add a comment to the test
  execute     Execute JavaScript code

Flags:
  -h, --help   help for misc

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli misc [command] --help" for more information about a command.

--- Testing: misc - misc ---
Command: ./bin/api-cli misc key 'Escape' 47
Status: SUCCESS
Output: Miscellaneous operations including adding comments and executing scripts.

This command consolidates various utility operations that don't fit into other categories.

Usage:
  api-cli misc [command]

Available Commands:
  comment     Add a comment to the test
  execute     Execute JavaScript code

Flags:
  -h, --help   help for misc

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli misc [command] --help" for more information about a command.

--- Testing: interact - interact ---
Command: ./bin/api-cli interact click '#save-button' 48 --position TOP_RIGHT
Status: SUCCESS
Output: Step created successfully!
ID: 0
Type: click
Position: 48

--- Testing: interact - interact ---
Command: ./bin/api-cli interact click '#menu-item' 49 --element-type LINK
Status: SUCCESS
Output: Step created successfully!
ID: 0
Type: click
Position: 49

--- Testing: interact - interact ---
Command: ./bin/api-cli interact write '#password' 'secret123' 50 --variable passwordVar
Status: SUCCESS
Output: Step created successfully!
ID: 0
Type: write
Position: 50

--- Testing: navigate - navigate ---
Command: ./bin/api-cli navigate scroll-element '#sidebar' 200 51
Status: FAILED
Exit Code: 1
Error: Error: failed to create scroll-element step: scroll-to-element not yet implemented in client
Usage:
  api-cli navigate scroll-element [checkpoint-id] <selector> [position] [flags]

Aliases:
  scroll-element, element, to-element

Flags:
      --block string    Vertical alignment (start, center, end, nearest) (default "start")
  -h, --help            help for scroll-element
      --inline string   Horizontal alignment (start, center, end, nearest) (default "nearest")
      --into-view       Scroll element into view (default true)
      --smooth          Use smooth scrolling

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

failed to create scroll-element step: scroll-to-element not yet implemented in client

--- Testing: window - window ---
Command: ./bin/api-cli window switch-frame parent 51
Status: SUCCESS
Output: Perform various window operations including tab switching, frame navigation, and window resizing.

This command consolidates all window-related operations:
  - Switch between iframes and parent frames
  - Navigate between browser tabs
  - Resize the browser window

Usage:
  api-cli window [command]

Examples:
  # Switch to iframe
  api-cli window switch iframe "#payment-frame" 1

  # Switch to next tab
  api-cli window switch tab next

  # Switch to parent frame
  api-cli window switch parent-frame

  # Resize window
  api-cli window resize 1024x768

Available Commands:
  resize      Resize browser window
  switch      Switch between frames and tabs

Flags:
  -h, --help   help for window

Global Flags:
      --config string   config file (default is ./config/virtuoso-config.yaml)
  -o, --output string   output format (json, yaml, human, ai) (default "human")
  -v, --verbose         verbose output

Use "api-cli window [command] --help" for more information about a command.

=== TEST SUMMARY ===
Total Commands Tested: 57
Successful: 51
Failed: 6
Success Rate: 89%
Project: Test_Project_20250714_031724 (ID: 9172)
Goal: Test_Goal_20250714_031724 (ID: 13940)
Journey: Test_Journey_20250714_031724 (ID: 608919)
Checkpoint ID: 1680928
Total Steps Created: 51

=== FAILED COMMANDS ===

=== COMMAND GROUP SUMMARY ===
assert commands: 0
0/12 passed
interact commands: 0
0/9 passed
navigate commands: 0
0/6 passed
data commands: 0
0/5 passed
dialog commands: 0
0/3 passed
wait commands: 0
0/3 passed
window commands: 0
0/6 passed
mouse commands: 0
0/6 passed
select commands: 0
0/3 passed
file commands: 0
0/1 passed
misc commands: 0
0/3 passed
