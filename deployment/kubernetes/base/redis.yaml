apiVersion: v1
kind: Service
metadata:
  name: virtuoso-redis
  namespace: virtuoso-api
  labels:
    app: virtuoso-api-cli
    component: redis
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: virtuoso-api-cli
    component: redis
  ports:
  - port: 6379
    targetPort: redis
    protocol: TCP
    name: redis
  - port: 9121
    targetPort: redis-exporter
    protocol: TCP
    name: redis-exporter
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: virtuoso-redis
  namespace: virtuoso-api
  labels:
    app: virtuoso-api-cli
    component: redis
spec:
  serviceName: virtuoso-redis
  replicas: 1
  selector:
    matchLabels:
      app: virtuoso-api-cli
      component: redis
  template:
    metadata:
      labels:
        app: virtuoso-api-cli
        component: redis
    spec:
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 999
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        - /etc/redis/redis.conf
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: virtuoso-api-secret
              key: REDIS_PASSWORD
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 3
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
      - name: redis-exporter
        image: oliver006/redis_exporter:v1.55.0
        ports:
        - containerPort: 9121
          name: redis-exporter
        env:
        - name: REDIS_ADDR
          value: "redis://localhost:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: virtuoso-api-secret
              key: REDIS_PASSWORD
        resources:
          requests:
            cpu: 25m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /health
            port: redis-exporter
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: redis-exporter
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 59000
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
  volumeClaimTemplates:
  - metadata:
      name: redis-data
      labels:
        app: virtuoso-api-cli
        component: redis
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: standard
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: virtuoso-api
  labels:
    app: virtuoso-api-cli
    component: redis
data:
  redis.conf: |
    # Redis configuration file
    bind 0.0.0.0
    protected-mode yes
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300

    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data

    # Logging
    loglevel notice
    logfile ""

    # Memory management
    maxmemory 256mb
    maxmemory-policy allkeys-lru

    # Security
    requirepass ${REDIS_PASSWORD}

    # Append only mode
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb

    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 128

    # Client management
    maxclients 10000
