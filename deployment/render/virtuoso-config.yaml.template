# Virtuoso API CLI Configuration Template for Render
# This template uses environment variables for sensitive data
# Environment variables are automatically substituted at runtime

api:
  # API authentication token - set via VIRTUOSO_API_TOKEN env var
  auth_token: ${VIRTUOSO_API_TOKEN}

  # Base URL for Virtuoso API - set via VIRTUOSO_BASE_URL env var
  # Default: https://api-app2.virtuoso.qa/api
  base_url: ${VIRTUOSO_BASE_URL:-https://api-app2.virtuoso.qa/api}

  # Request timeout - set via VIRTUOSO_REQUEST_TIMEOUT env var
  # Default: 30s
  timeout: ${VIRTUOSO_REQUEST_TIMEOUT:-30s}

  # Maximum retry attempts - set via VIRTUOSO_MAX_RETRIES env var
  # Default: 3
  max_retries: ${VIRTUOSO_MAX_RETRIES:-3}

  # Retry delay - set via VIRTUOSO_RETRY_DELAY env var
  # Default: 1s
  retry_delay: ${VIRTUOSO_RETRY_DELAY:-1s}

organization:
  # Organization ID - set via VIRTUOSO_ORG_ID env var
  id: "${VIRTUOSO_ORG_ID}"

  # Organization name (optional) - set via VIRTUOSO_ORG_NAME env var
  name: "${VIRTUOSO_ORG_NAME:-}"

cli:
  # Output format - set via VIRTUOSO_OUTPUT_FORMAT env var
  # Options: json, yaml, table, human
  # Default: json
  output_format: ${VIRTUOSO_OUTPUT_FORMAT:-json}

  # Enable verbose output - set via VIRTUOSO_VERBOSE env var
  # Default: false
  verbose: ${VIRTUOSO_VERBOSE:-false}

  # Enable debug mode - set via VIRTUOSO_DEBUG env var
  # Default: false
  debug: ${VIRTUOSO_DEBUG:-false}

  # Color output - set via VIRTUOSO_COLOR env var
  # Default: auto
  color: ${VIRTUOSO_COLOR:-auto}

  # Auto-increment position - set via VIRTUOSO_AUTO_INCREMENT env var
  # Default: true
  auto_increment_position: ${VIRTUOSO_AUTO_INCREMENT:-true}

server:
  # Server port - set via PORT env var (Render sets this automatically)
  # Default: 8080
  port: ${PORT:-8080}

  # Server host - set via HOST env var
  # Default: 0.0.0.0
  host: ${HOST:-0.0.0.0}

  # Enable CORS - set via ENABLE_CORS env var
  # Default: true
  enable_cors: ${ENABLE_CORS:-true}

  # CORS origins - set via CORS_ORIGINS env var
  # Default: *
  cors_origins: ${CORS_ORIGINS:-*}

  # Request size limit - set via MAX_REQUEST_SIZE env var
  # Default: 10MB
  max_request_size: ${MAX_REQUEST_SIZE:-10MB}

  # Enable health check endpoint - set via ENABLE_HEALTH_CHECK env var
  # Default: true
  enable_health_check: ${ENABLE_HEALTH_CHECK:-true}

  # Health check path - set via HEALTH_CHECK_PATH env var
  # Default: /health
  health_check_path: ${HEALTH_CHECK_PATH:-/health}

performance:
  # Worker pool size - set via WORKER_POOL_SIZE env var
  # Default: 10
  worker_pool_size: ${WORKER_POOL_SIZE:-10}

  # Enable caching - set via ENABLE_CACHE env var
  # Default: true
  enable_cache: ${ENABLE_CACHE:-true}

  # Cache TTL in seconds - set via CACHE_TTL env var
  # Default: 300
  cache_ttl: ${CACHE_TTL:-300}

  # Enable rate limiting - set via ENABLE_RATE_LIMITING env var
  # Default: true
  enable_rate_limiting: ${ENABLE_RATE_LIMITING:-true}

  # Rate limit requests - set via RATE_LIMIT_REQUESTS env var
  # Default: 100
  rate_limit_requests: ${RATE_LIMIT_REQUESTS:-100}

  # Rate limit window - set via RATE_LIMIT_WINDOW env var
  # Default: 1m
  rate_limit_window: ${RATE_LIMIT_WINDOW:-1m}

logging:
  # Log level - set via LOG_LEVEL env var
  # Options: debug, info, warn, error
  # Default: info
  level: ${LOG_LEVEL:-info}

  # Log format - set via LOG_FORMAT env var
  # Options: json, text
  # Default: json
  format: ${LOG_FORMAT:-json}

  # Log output - set via LOG_OUTPUT env var
  # Options: stdout, stderr, file
  # Default: stdout
  output: ${LOG_OUTPUT:-stdout}

  # Log file path (if output is file) - set via LOG_FILE env var
  file: ${LOG_FILE:-/var/log/virtuoso-api-cli.log}

  # Include timestamps - set via LOG_TIMESTAMPS env var
  # Default: true
  timestamps: ${LOG_TIMESTAMPS:-true}

  # Include caller info - set via LOG_CALLER env var
  # Default: false
  caller: ${LOG_CALLER:-false}

monitoring:
  # Enable metrics - set via ENABLE_METRICS env var
  # Default: true
  enable_metrics: ${ENABLE_METRICS:-true}

  # Metrics port - set via METRICS_PORT env var
  # Default: 9090
  metrics_port: ${METRICS_PORT:-9090}

  # Metrics path - set via METRICS_PATH env var
  # Default: /metrics
  metrics_path: ${METRICS_PATH:-/metrics}

  # Enable tracing - set via TRACE_ENABLED env var
  # Default: false
  trace_enabled: ${TRACE_ENABLED:-false}

  # Trace endpoint - set via TRACE_ENDPOINT env var
  trace_endpoint: ${TRACE_ENDPOINT:-}

  # Trace sample rate - set via TRACE_SAMPLE_RATE env var
  # Default: 0.1
  trace_sample_rate: ${TRACE_SAMPLE_RATE:-0.1}

# Redis configuration (optional, for caching)
redis:
  # Redis URL - set via REDIS_URL env var
  url: ${REDIS_URL:-}

  # Redis password - set via REDIS_PASSWORD env var
  password: ${REDIS_PASSWORD:-}

  # Redis database - set via REDIS_DB env var
  # Default: 0
  db: ${REDIS_DB:-0}

  # Connection pool size - set via REDIS_POOL_SIZE env var
  # Default: 10
  pool_size: ${REDIS_POOL_SIZE:-10}

# Feature flags
features:
  # Enable experimental features - set via ENABLE_EXPERIMENTAL env var
  # Default: false
  experimental: ${ENABLE_EXPERIMENTAL:-false}

  # Enable beta features - set via ENABLE_BETA env var
  # Default: false
  beta: ${ENABLE_BETA:-false}

  # Enable legacy mode - set via ENABLE_LEGACY env var
  # Default: false
  legacy: ${ENABLE_LEGACY:-false}
