{{- if and .Values.redis.enabled (not .Values.redis.existingSecret) }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "virtuoso-api-cli.fullname" . }}-redis
  labels:
    {{- include "virtuoso-api-cli.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: redis
      protocol: TCP
      name: redis
  selector:
    {{- include "virtuoso-api-cli.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "virtuoso-api-cli.fullname" . }}-redis
  labels:
    {{- include "virtuoso-api-cli.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  serviceName: {{ include "virtuoso-api-cli.fullname" . }}-redis
  replicas: 1
  selector:
    matchLabels:
      {{- include "virtuoso-api-cli.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "virtuoso-api-cli.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      {{- include "virtuoso-api-cli.imagePullSecrets" . | nindent 6 }}
      securityContext:
        fsGroup: 1001
      containers:
        - name: redis
          image: redis:7-alpine
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
            runAsNonRoot: true
          command:
            - redis-server
          args:
            - --requirepass
            - $(REDIS_PASSWORD)
            - --maxmemory
            - "256mb"
            - --maxmemory-policy
            - "allkeys-lru"
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "virtuoso-api-cli.secretName" . }}
                  key: REDIS_PASSWORD
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - redis-cli -a $REDIS_PASSWORD ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - redis-cli -a $REDIS_PASSWORD ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            limits:
              memory: 256Mi
              cpu: 250m
            requests:
              memory: 128Mi
              cpu: 100m
          volumeMounts:
            - name: redis-data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: redis-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 8Gi
{{- end }}
