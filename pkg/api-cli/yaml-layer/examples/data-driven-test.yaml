# Data-driven test with multiple scenarios
test: Login Validation Scenarios
nav: /login
data:
  # Test scenarios with expected outcomes
  scenarios:
    - name: Valid Login
      email: valid@test.com
      password: ValidPass123\!
      expect: Dashboard
      shouldPass: true

    - name: Invalid Password
      email: valid@test.com
      password: WrongPassword
      expect: "Invalid credentials"
      shouldPass: false

    - name: Empty Email
      email: ""
      password: SomePassword
      expect: "Email is required"
      shouldPass: false

    - name: Invalid Email Format
      email: notanemail
      password: ValidPass123\!
      expect: "Please enter a valid email"
      shouldPass: false

    - name: SQL Injection Attempt
      email: "admin' OR '1'='1"
      password: anything
      expect: "Invalid credentials"
      shouldPass: false

do:
  # Test each scenario
  - loop:
      over: $scenarios
      as: scenario
      do:
        - note: "Testing: {{scenario.name}}"

        # Clear form
        - js: |
            document.querySelector('#email').value = '';
            document.querySelector('#password').value = '';

        # Enter credentials
        - t: {#email: $scenario.email}
        - t: {#password: $scenario.password}
        - c: "Sign In"

        # Wait for response
        - wait: 500

        # Verify expected outcome
        - ch: $scenario.expect

        # Additional validation for successful login
        - if:
            cond: $scenario.shouldPass
            then:
              - ch: .user-menu
              - store: {.user-email: loggedInUser}
              - eq: {$loggedInUser: $scenario.email}
              - c: "Logout"
              - wait: /login
            else:
              # Verify still on login page
              - ch: "Sign In"
              - ch: #email

# Summary
teardown:
  - js: |
      const total = {{scenarios.length}};
      console.log(`Tested ${total} login scenarios`);
