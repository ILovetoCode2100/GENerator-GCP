# Test: End-to-End Login Flow
metadata:
  name: "Complete Login Flow with Validation"
  description: "Full login workflow including navigation, form filling, submission, and verification"
  tags: [workflow, e2e, critical, smoke]
  category: workflows
  priority: critical
  timeout: 60000

# Test configuration and variables
config:
  checkpoint_id: "${TEST_CHECKPOINT_ID}"
  base_url: "${TEST_BASE_URL}"
  retry_on_failure: true
  capture_screenshots: true

# Define workflow variables
variables:
  # User credentials
  valid_username: "test.user@example.com"
  valid_password: "SecurePass123!"
  invalid_username: "wrong@example.com"
  invalid_password: "wrongpass"

  # Expected values
  login_page_title: "Login - Example Site"
  dashboard_title: "Dashboard - Example Site"
  welcome_message: "Welcome back,"
  error_message: "Invalid username or password"

  # Timing
  form_fill_delay: 100
  submit_wait: 2000

# Pre-test setup
setup:
  - name: "Clear cookies and storage"
    command: step-data
    action: cookie
    sub_action: clear-all

  - name: "Set viewport to desktop"
    command: step-window
    action: resize
    args:
      dimensions: "1920x1080"

# Main test workflows
workflows:
  # Successful login flow
  - name: "Successful Login Journey"
    description: "Complete login with valid credentials"
    steps:
      # Navigate to login page
      - name: "Navigate to login page"
        command: step-navigate
        action: to
        args:
          url: "${base_url}/login"

      - name: "Verify login page loaded"
        command: step-assert
        action: exists
        args:
          selector: "form#login-form"

      - name: "Store page title"
        command: step-data
        action: store
        sub_action: element-text
        args:
          selector: "title"
          variable: "current_page_title"

      - name: "Verify correct page"
        command: step-assert
        action: variable
        args:
          variable: "current_page_title"
          expected: "${login_page_title}"

      # Fill login form
      - name: "Enter username"
        command: step-interact
        action: write
        args:
          selector: "input#username"
          text: "${valid_username}"

      - name: "Small delay between fields"
        command: step-wait
        action: time
        args:
          milliseconds: "${form_fill_delay}"

      - name: "Enter password"
        command: step-interact
        action: write
        args:
          selector: "input#password"
          text: "${valid_password}"

      - name: "Check remember me"
        command: step-interact
        action: click
        args:
          selector: "input#remember-me"

      # Submit form
      - name: "Click login button"
        command: step-interact
        action: click
        args:
          selector: "button[type='submit']"

      - name: "Wait for navigation"
        command: step-wait
        action: time
        args:
          milliseconds: "${submit_wait}"

      # Verify successful login
      - name: "Wait for dashboard"
        command: step-wait
        action: element
        args:
          selector: "div.dashboard-container"

      - name: "Verify dashboard loaded"
        command: step-assert
        action: exists
        args:
          selector: "${welcome_message} ${valid_username}"

      - name: "Store session cookie"
        command: step-data
        action: store
        sub_action: cookie-value
        args:
          name: "session_id"
          variable: "user_session"

      - name: "Verify session exists"
        command: step-assert
        action: variable
        args:
          variable: "user_session"
          operator: "not-empty"

      - name: "Check user menu visible"
        command: step-assert
        action: exists
        args:
          selector: "div.user-menu"

    validation:
      all_steps_pass: true
      final_url_contains: "/dashboard"
      cookies_set: ["session_id", "remember_token"]

  # Failed login flow
  - name: "Failed Login Journey"
    description: "Attempt login with invalid credentials"
    steps:
      - name: "Navigate to login page"
        command: step-navigate
        action: to
        args:
          url: "${base_url}/login"

      - name: "Enter invalid username"
        command: step-interact
        action: write
        args:
          selector: "input#username"
          text: "${invalid_username}"

      - name: "Enter invalid password"
        command: step-interact
        action: write
        args:
          selector: "input#password"
          text: "${invalid_password}"

      - name: "Submit form"
        command: step-interact
        action: click
        args:
          selector: "button[type='submit']"

      - name: "Wait for error message"
        command: step-wait
        action: element
        args:
          selector: ".error-message"

      - name: "Verify error displayed"
        command: step-assert
        action: equals
        args:
          selector: ".error-message"
          expected: "${error_message}"

      - name: "Verify still on login page"
        command: step-assert
        action: exists
        args:
          selector: "form#login-form"

      - name: "Verify fields cleared"
        command: step-assert
        action: equals
        args:
          selector: "input#password"
          expected: ""

    validation:
      all_steps_pass: true
      url_unchanged: true
      no_session_cookie: true

  # Password reset flow
  - name: "Password Reset Journey"
    description: "Complete password reset process"
    steps:
      - name: "Navigate to login"
        command: step-navigate
        action: to
        args:
          url: "${base_url}/login"

      - name: "Click forgot password"
        command: step-interact
        action: click
        args:
          selector: "a.forgot-password"

      - name: "Wait for reset form"
        command: step-wait
        action: element
        args:
          selector: "form#reset-form"

      - name: "Enter email"
        command: step-interact
        action: write
        args:
          selector: "input#reset-email"
          text: "${valid_username}"

      - name: "Submit reset request"
        command: step-interact
        action: click
        args:
          selector: "button.reset-submit"

      - name: "Wait for confirmation"
        command: step-wait
        action: element
        args:
          selector: ".success-message"

      - name: "Verify success message"
        command: step-assert
        action: exists
        args:
          selector: "Check your email for reset instructions"

    validation:
      all_steps_pass: true
      shows_success_message: true

# Post-test cleanup
cleanup:
  - name: "Logout if logged in"
    command: step-interact
    action: click
    args:
      selector: "a.logout"
    continue_on_error: true

  - name: "Clear test cookies"
    command: step-data
    action: cookie
    sub_action: clear-all

# Test assertions
assertions:
  - description: "Login flow should complete within 30 seconds"
    condition: "total_duration < 30000"

  - description: "No JavaScript errors during flow"
    condition: "console_errors == 0"

  - description: "All form validations should work"
    condition: "validation_errors_shown"

  - description: "Session management should be secure"
    condition: "secure_cookies_only"
