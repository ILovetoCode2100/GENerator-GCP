name: "Edge Cases and Boundary Conditions"
description: "Test boundary conditions, edge cases, and unusual but valid inputs"

infrastructure:
  organization_id: "2242"
  project:
    name: "Edge Case Test Suite"
    description: "Testing boundary conditions and edge cases"
  starting_url: "https://example.com"

variables:
  - name: "emptyString"
    value: ""
  - name: "veryLongString"
    value: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. This string is intentionally very long to test handling of large text inputs in various commands throughout the test suite."
  - name: "specialChars"
    value: '!@#$%^&*()_+-=[]{}|;'':",./<>?'
  - name: "unicodeChars"
    value: "🎭 Unicode: Ñiño José München Москва 北京 🚀"

steps:
  # ========== NAVIGATION EDGE CASES ==========
  # Very long URL
  - navigate: "https://example.com/very/long/path/with/many/segments/that/might/exceed/normal/url/length/limits/in/some/systems/test123?param1=value1&param2=value2&param3=value3"

  # URL with special characters
  - navigate: "https://example.com/page?q=test%20value&special=!@%23$%25"

  # URL with port number
  - navigate: "https://example.com:8080/test"

  # URL with authentication
  - navigate: "https://user:pass@example.com/secure"

  # Scroll to coordinate boundaries
  - scroll:
      position: "0,0"

  - scroll:
      position: "9999,9999"

  # Scroll by large offset
  - scroll:
      by: "5000,5000"

  # Scroll by negative offset
  - scroll:
      by: "-100,-100"

  # Scroll to element with complex selector
  - scroll: "div.class1.class2#id[data-attr='value']:nth-child(3)"

  # ========== INTERACTION EDGE CASES ==========
  # Click element with very long selector
  - click: "div.very-long-class-name-that-might-exceed-normal-limits > span.another-long-class > button.yet-another-long-class[data-very-long-attribute-name='very-long-attribute-value']"

  # Write empty string (clear field)
  - write:
      selector: "input#field"
      text: "$emptyString"

  # Write very long text
  - write:
      selector: "textarea#notes"
      text: "$veryLongString"

  # Write special characters
  - write:
      selector: "input#special"
      text: "$specialChars"

  # Write unicode characters
  - write:
      selector: "input#unicode"
      text: "$unicodeChars"

  # Write text with newlines
  - write:
      selector: "textarea#multiline"
      text: "Line 1\nLine 2\nLine 3"

  # Write text with tabs
  - write:
      selector: "input#tabs"
      text: "Col1\tCol2\tCol3"

  # Key combinations
  - key: "Ctrl+A"
  - key: "Shift+Tab"
  - key: "Alt+F4"

  # Mouse move to edge coordinates
  - mouse:
      action: "move"
      position: "0,0"

  - mouse:
      action: "move"
      position: "1920,1080"

  # Mouse move by zero offset
  - mouse:
      action: "move-by"
      offset: "0,0"

  # Select first option (index 0)
  - select:
      selector: "select#first"
      index: 0

  # Select with very long option text
  - select:
      selector: "select#long"
      option: "This is a very long option text that might exceed normal display limits in dropdown menus"

  # ========== ASSERTION EDGE CASES ==========
  # Assert empty value
  - assert:
      type: "equals"
      selector: "input#empty"
      value: ""

  # Assert with special characters
  - assert:
      type: "equals"
      selector: "span#special"
      value: "$specialChars"

  # Assert numeric boundary - zero
  - assert:
      type: "gte"
      selector: "span#zero"
      value: "0"

  # Assert numeric boundary - negative
  - assert:
      type: "lt"
      selector: "span#negative"
      value: "-1"

  # Assert numeric boundary - large number
  - assert:
      type: "lte"
      selector: "span#large"
      value: "999999999"

  # Assert numeric boundary - decimal
  - assert:
      type: "gt"
      selector: "span#decimal"
      value: "3.14159"

  # Assert with complex regex
  - assert:
      type: "matches"
      selector: "div#complex"
      pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$"

  # Assert variable with special characters
  - assert:
      type: "variable"
      variable: "specialChars"
      value: '!@#$%^&*()_+-=[]{}|;'':",./<>?'

  # ========== WINDOW EDGE CASES ==========
  # Minimum window size
  - window:
      action: "resize"
      size: "1x1"

  # Maximum window size
  - window:
      action: "resize"
      size: "7680x4320"

  # Common mobile sizes
  - window:
      action: "resize"
      size: "375x667"

  - window:
      action: "resize"
      size: "414x896"

  # Switch to tab 0 (first tab)
  - window:
      action: "switch"
      to: "tab-0"

  # Switch to iframe with complex selector
  - window:
      action: "switch"
      iframe: "iframe[src*='example.com'][name='content']:not([hidden])"

  # ========== DATA EDGE CASES ==========
  # Store from element with no text
  - store:
      selector: "img"
      as: "emptyText"

  # Store attribute that doesn't exist
  - store:
      type: "attribute"
      selector: "div"
      attribute: "non-existent-attribute"
      as: "noAttr"

  # Store with variable name containing numbers
  - store:
      selector: "span"
      as: "var123"

  # Store with variable name containing underscores
  - store:
      selector: "span"
      as: "my_var_name"

  # Cookie with empty value
  - cookie:
      action: "create"
      name: "emptyCookie"
      value: ""

  # Cookie with very long value
  - cookie:
      action: "create"
      name: "longCookie"
      value: "$veryLongString"

  # Cookie with special characters in name
  - cookie:
      action: "create"
      name: "special-cookie_name.123"
      value: "test"

  # ========== WAIT EDGE CASES ==========
  # Wait minimum time
  - wait: 1

  # Wait exactly 1 second
  - wait: 1000

  # Wait for element with complex selector
  - wait: "div:has(> span.ready):not(.loading)"

  # Wait for dynamically created element
  - wait: "[data-dynamic='true']"

  # ========== FILE EDGE CASES ==========
  # File with very long URL
  - file:
      selector: "input[type=file]"
      url: "https://example.com/very/long/path/to/file/with/many/segments/document.pdf?param=value"

  # File with special characters in URL
  - file:
      selector: "input[type=file]"
      url: "https://example.com/files/test%20file%20(1).pdf"

  # Multiple file inputs with same class
  - upload:
      selector: "input.file-upload:nth-of-type(2)"
      url: "https://example.com/second-file.doc"

  # ========== MISC EDGE CASES ==========
  # Comment with special characters
  - comment: "Testing: $specialChars"

  # Comment with unicode
  - comment: "Unicode test: $unicodeChars"

  # Very long comment
  - comment: "$veryLongString"

  # Execute JavaScript returning different types
  - execute: "return null;"
  - execute: "return undefined;"
  - execute: "return true;"
  - execute: "return false;"
  - execute: "return 0;"
  - execute: "return -1;"
  - execute: "return 3.14159;"
  - execute: "return '';"
  - execute: "return [];"
  - execute: "return {};"
  - execute: "return new Date();"

  # Execute JavaScript with unicode
  - javascript: "console.log('$unicodeChars');"

  # Execute JavaScript accessing window object
  - execute: "return window.location.href;"

  # ========== SELECTOR EDGE CASES ==========
  # CSS pseudo-selectors
  - click: "button:first-child"
  - click: "a:last-of-type"
  - click: "input:not([disabled])"
  - click: "li:nth-child(odd)"

  # Attribute selectors with special values
  - click: "[data-value='with spaces']"
  - click: "[href^='https://']"
  - click: "[class*='partial-match']"
  - click: "[id$='-suffix']"

  # Multiple attribute selectors
  - click: "input[type='text'][required][placeholder]"

  # Deep nesting
  - click: "body > div > div > div > div > div > span > a"

config:
  continue_on_error: true
  timeout: 60000 # Longer timeout for edge cases
