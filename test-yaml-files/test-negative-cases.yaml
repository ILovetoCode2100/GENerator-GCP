name: "Negative Test Cases - Error Handling"
description: "Test error conditions and invalid inputs to verify proper error handling and user guidance"

infrastructure:
  organization_id: "2242"
  project:
    name: "Negative Test Suite"
    description: "Testing error handling with invalid inputs"
  starting_url: "https://example.com"

steps:
  # ========== NAVIGATION ERRORS ==========
  # Missing URL
  - navigate: ""

  # Invalid URL format
  - navigate: "not-a-valid-url"

  # Invalid scroll direction
  - scroll:
      direction: "sideways"

  # Invalid scroll target
  - scroll:
      to: "invalid-target"

  # Invalid position format
  - scroll:
      position: "not-numbers"

  # Missing required field
  - scroll:
      by: ""

  # ========== INTERACTION ERRORS ==========
  # Empty selector
  - click: ""

  # Invalid selector syntax
  - click: ">>>invalid<<<"

  # Write without text
  - write:
      selector: "input#email"
      text: ""

  # Write without selector
  - write:
      text: "test@example.com"

  # Invalid key
  - key: "NotAValidKey"

  # Mouse with invalid action
  - mouse:
      action: "invalid-action"
      selector: "div"

  # Mouse move-by with invalid offset
  - mouse:
      action: "move-by"
      offset: "not-numbers"

  # Mouse move with invalid position
  - mouse:
      action: "move"
      position: "abc,xyz"

  # Select without selector
  - select:
      option: "United States"

  # Select with conflicting options
  - select:
      selector: "select#country"
      option: "USA"
      index: 0
      last: true

  # Select with negative index
  - select:
      selector: "select#language"
      index: -1

  # ========== ASSERTION ERRORS ==========
  # Assert with invalid type
  - assert:
      type: "invalid-type"
      selector: "div"

  # Assert equals without value
  - assert:
      type: "equals"
      selector: "h1"

  # Assert numeric comparison with non-numeric value
  - assert:
      type: "gt"
      selector: "span.count"
      value: "not-a-number"

  # Assert matches with invalid regex
  - assert:
      type: "matches"
      selector: "div.email"
      pattern: "[invalid-regex"

  # Assert variable without variable name
  - assert:
      type: "variable"
      value: "test"

  # Assert checked on non-checkbox
  - assert:
      type: "checked"
      selector: "div.not-checkbox"

  # ========== WINDOW ERRORS ==========
  # Invalid window size format
  - window:
      action: "resize"
      size: "invalid-size"

  # Window resize with only width
  - window:
      action: "resize"
      size: "1024"

  # Window resize with negative dimensions
  - window:
      action: "resize"
      size: "-100x-200"

  # Invalid switch target
  - window:
      action: "switch"
      to: "invalid-target"

  # Switch with missing target
  - window:
      action: "switch"

  # Invalid tab number
  - window:
      action: "switch"
      to: "tab-999"

  # ========== DATA ERRORS ==========
  # Store without variable name
  - store:
      selector: "h1"

  # Store with empty selector
  - store:
      selector: ""
      as: "var"

  # Store attribute without attribute name
  - store:
      type: "attribute"
      selector: "a.link"
      as: "linkUrl"

  # Cookie with empty name
  - cookie:
      action: "create"
      name: ""
      value: "test"

  # Cookie create without value
  - cookie:
      action: "create"
      name: "session"

  # Invalid cookie action
  - cookie:
      action: "invalid-action"

  # ========== WAIT ERRORS ==========
  # Wait with invalid time
  - wait: -1000

  # Wait with non-numeric string
  - wait: "not-a-number"

  # Wait with empty selector
  - wait: ""

  # Wait with excessive time
  - wait: 999999999

  # ========== DIALOG ERRORS ==========
  # Invalid alert action
  - alert: "invalid-action"

  # Dialog with invalid type
  - dialog:
      type: "invalid-type"
      action: "accept"

  # Dialog confirm with invalid action
  - dialog:
      type: "confirm"
      action: "maybe"

  # Dialog prompt with both text and reject
  - dialog:
      type: "prompt"
      text: "Input"
      action: "reject"

  # ========== FILE ERRORS ==========
  # File upload without URL
  - file:
      selector: "input[type=file]"

  # File upload with invalid URL
  - file:
      selector: "input[type=file]"
      url: "not-a-url"

  # File upload with local path (not supported)
  - file:
      selector: "input[type=file]"
      url: "/local/file/path.pdf"

  # Upload without selector
  - upload:
      url: "https://example.com/file.pdf"

  # ========== MISC ERRORS ==========
  # Empty comment
  - comment: ""

  # Execute with invalid JavaScript
  - execute: "invalid javascript {{{"

  # Execute with dangerous code
  - execute: "while(true){}"

  # ========== SYNTAX ERRORS ==========
  # Unknown command type
  - unknown_command: "test"

  # Malformed step structure
  - this is not valid yaml:

  # Missing required field in complex command
  - write:
      invalid_field: "test"

  # Using variable that doesn't exist
  - assert:
      type: "variable"
      variable: "$undefinedVariable"
      value: "test"

config:
  continue_on_error: true # Continue despite errors to test all cases
  timeout: 5000 # Short timeout for error cases
