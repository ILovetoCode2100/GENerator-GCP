name: "Comprehensive Positive Test Cases - All 69 Commands"
description: "Test all 69 Virtuoso CLI commands with valid inputs to verify correct functionality"

infrastructure:
  organization_id: "2242"
  project:
    name: "Positive Test Suite"
    description: "Testing all commands with valid inputs"
  starting_url: "https://example.com"

variables:
  - name: "testEmail"
    value: "test@example.com"
  - name: "expectedTitle"
    value: "Welcome"
  - name: "maxPrice"
    value: "1000"

steps:
  # ========== NAVIGATION COMMANDS (10 types) ==========
  # 1. Navigate to URL
  - navigate: "https://example.com"

  # 2. Scroll to top
  - scroll:
      to: "top"

  # 3. Scroll to bottom
  - scroll:
      to: "bottom"

  # 4. Scroll to element
  - scroll:
      to: "h1"

  # 5. Scroll to position
  - scroll:
      position: "100,200"

  # 6. Scroll by offset
  - scroll:
      by: "0,300"

  # 7. Scroll up
  - scroll:
      direction: "up"

  # 8. Scroll down
  - scroll:
      direction: "down"

  # 9. Navigate with new tab
  - navigate:
      url: "https://example.com/page2"
      new_tab: true

  # 10. Simple element scroll
  - scroll: "div.content"

  # ========== INTERACTION COMMANDS (15 types) ==========
  # 11. Click
  - click: "button.submit"

  # 12. Double-click
  - double-click: "div.card"

  # 13. Right-click
  - right-click: "div.menu"

  # 14. Hover
  - hover: "a.tooltip"

  # 15. Write text
  - write:
      selector: "input#email"
      text: "$testEmail"

  # 16. Press key
  - key: "Enter"

  # 17. Mouse move-to element
  - mouse:
      action: "move-to"
      selector: "nav.menu"

  # 18. Mouse move-by offset
  - mouse:
      action: "move-by"
      offset: "50,100"

  # 19. Mouse move to position
  - mouse:
      action: "move"
      position: "200,300"

  # 20. Mouse down
  - mouse:
      action: "down"

  # 21. Mouse up
  - mouse:
      action: "up"

  # 22. Mouse enter
  - mouse:
      action: "enter"

  # 23. Select by option text
  - select:
      selector: "select#country"
      option: "United States"

  # 24. Select by index
  - select:
      selector: "select#language"
      index: 0

  # 25. Select last option
  - select:
      selector: "select#timezone"
      last: true

  # ========== ASSERTION COMMANDS (12 types) ==========
  # 26. Assert exists (simple)
  - assert: "h1"

  # 27. Assert not exists
  - assert:
      type: "not-exists"
      selector: "div.error"

  # 28. Assert equals
  - assert:
      type: "equals"
      selector: "h1"
      value: "$expectedTitle"

  # 29. Assert not equals
  - assert:
      type: "not-equals"
      selector: "span.status"
      value: "Error"

  # 30. Assert checked
  - assert:
      type: "checked"
      selector: "input[type=checkbox]#terms"

  # 31. Assert selected
  - assert:
      type: "selected"
      selector: "option[value=us]"

  # 32. Assert greater than
  - assert:
      type: "gt"
      selector: "span.count"
      value: "10"

  # 33. Assert greater than or equal
  - assert:
      type: "gte"
      selector: "span.total"
      value: "100"

  # 34. Assert less than
  - assert:
      type: "lt"
      selector: "span.price"
      value: "$maxPrice"

  # 35. Assert less than or equal
  - assert:
      type: "lte"
      selector: "span.quantity"
      value: "50"

  # 36. Assert matches pattern
  - assert:
      type: "matches"
      selector: "div.email"
      pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"

  # 37. Assert variable
  - assert:
      type: "variable"
      variable: "testEmail"
      value: "test@example.com"

  # ========== WINDOW COMMANDS (7 types) ==========
  # 38. Window resize
  - window:
      action: "resize"
      size: "1024x768"

  # 39. Window maximize
  - window:
      action: "maximize"

  # 40. Switch to next tab
  - window:
      action: "switch"
      to: "next"

  # 41. Switch to previous tab
  - window:
      action: "switch"
      to: "prev"

  # 42. Switch to specific tab
  - window:
      action: "switch"
      to: "tab-0"

  # 43. Switch to iframe
  - window:
      action: "switch"
      iframe: "iframe#content"

  # 44. Switch to parent frame
  - window:
      action: "switch"
      parent: true

  # ========== DATA COMMANDS (6 types) ==========
  # 45. Store element text
  - store:
      selector: "h1"
      as: "pageTitle"

  # 46. Store attribute value
  - store:
      type: "attribute"
      selector: "a.link"
      attribute: "href"
      as: "linkUrl"

  # 47. Store literal value
  - store:
      type: "literal"
      value: "test123"
      as: "myVariable"

  # 48. Create cookie
  - cookie:
      action: "create"
      name: "sessionId"
      value: "abc123"

  # 49. Delete cookie
  - cookie:
      action: "delete"
      name: "sessionId"

  # 50. Clear all cookies
  - cookie:
      action: "clear"

  # ========== WAIT COMMANDS (2 types) ==========
  # 51. Wait for element
  - wait: "div.loaded"

  # 52. Wait for time
  - wait: 2000

  # ========== DIALOG COMMANDS (5 types) ==========
  # 53. Dismiss alert
  - alert: "dismiss"

  # 54. Accept confirm dialog
  - dialog:
      type: "confirm"
      action: "accept"

  # 55. Reject confirm dialog
  - dialog:
      type: "confirm"
      action: "reject"

  # 56. Accept prompt with text
  - dialog:
      type: "prompt"
      text: "User Input Text"

  # 57. Reject prompt
  - dialog:
      type: "prompt"
      action: "reject"

  # ========== FILE COMMANDS (2 types) ==========
  # 58. File upload
  - file:
      selector: "input[type=file]"
      url: "https://example.com/test.pdf"

  # 59. Upload (alternative syntax)
  - upload:
      selector: "input.file-upload"
      url: "https://example.com/document.doc"

  # ========== MISC COMMANDS (2 types) ==========
  # 60. Comment
  - comment: "This is a test comment for tracking progress"

  # 61. Execute JavaScript
  - execute: "return document.title;"

  # ========== ADDITIONAL SYNTAX VARIATIONS ==========
  # 62. Write with 'into' syntax
  - write:
      into: "textarea#notes"
      value: "Testing alternative syntax"

  # 63. Assert with 'element' syntax
  - assert:
      element: "button.primary"
      equals: "Continue"

  # 64. Store with 'from' syntax
  - store:
      from: "span.user"
      in: "currentUser"
      type: "text"

  # 65. Select with 'text' syntax
  - select:
      from: "select#state"
      text: "California"

  # 66. Wait with 'for' syntax
  - wait:
      for: "img.loaded"

  # 67. JavaScript alternative syntax
  - javascript: "console.log('Alternative JS syntax');"

  # 68. Navigate with implicit URL
  - navigate:
      to: "https://example.com/final"

  # 69. Assert exists with explicit type
  - assert:
      type: "exists"
      selector: "footer"

config:
  continue_on_error: false
  timeout: 30000
